/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("/****** ABOUT ******\n\nArrayMap\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.19\n\tReleased: \n\tDescription: A map that only takes arrays, but stores them more efficiently than a linear map.\n\t\n\n****** ***** ******/\n\t\nconst Entry = __webpack_require__(5);\n//try using native Map\n//const Map = require(\"./Map.js\");\n\n/******** CONSTRUCTOR ********/\n\nfunction ArrayMap () \n{\n\t//UNF: clone elements? If a person messes with the elements of an array they set to have a value, then discard it and make a fresh one, they will expect .get to return the same value. But since they messed with elements of the array before they got rid of it, the elements of the nodes in this map will have changes and the value the user is looking for will no longer have the same key.\n\tthis._choices = new Map();\n\tthis.size = 0;\n}\n\n\n/******** PROPERTIES ********/\n\n//UNF: recalculate .size at the end of .set\nArrayMap.prototype.size;\n//the next \nArrayMap.prototype._choices;\n//the answer to .get( [] )\nArrayMap.prototype._nodeValue;\nArrayMap.prototype._isOccupied;\n\n\n/******** METHODS ********/\n\nArrayMap.prototype.get = function (key, keyIndex)\n{\n\tkeyIndex = keyIndex || 0;\n\tif (keyIndex == key.length)\n\t{\n\t\treturn this._nodeValue;\n\t}\n\telse\n\t{\n\t\tvar currentElement = key[keyIndex];\n\t\tif (this._choices.has(currentElement))\n\t\t{\n\t\t\tvar nextNode = this._choices.get(currentElement);\n\t\t\tvar nextGet = nextNode.get(key, keyIndex+1);\n\t\t\treturn nextGet;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nArrayMap.prototype.set = function (key, value, keyIndex)\n{\n\tkeyIndex = keyIndex || 0;\n\t\n\tif (keyIndex == key.length)\n\t{\n\t\tthis._nodeValue = value;\n\t\tthis._isOccupied = true;\n\t\tthis._calculateSize();\n\t\treturn value;\n\t}\n\telse\n\t{\n\t\tvar currentElement = key[keyIndex];\n\t\tif (this._choices.has(currentElement))\n\t\t{\n\t\t\tvar nextNode = this._choices.get(currentElement);\n\t\t\t\n\t\t\tnextNode.set(key, value, keyIndex+1);\n\t\t\t\n\t\t\tthis._calculateSize();\n\t\t\t\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar nextNode = new ArrayMap();\n\t\t\tnextNode.set(key, value, keyIndex+1);\n\t\t\t\n\t\t\tvar currentElement = key[keyIndex];\n\t\t\tthis._choices.set(currentElement, nextNode);\n\t\t\tthis._calculateSize();\n\t\t\t\n\t\t\treturn value;\n\t\t}\n\t}\n\t\n}\n\nArrayMap.prototype.has = function (key, keyIndex)\n{\n\tkeyIndex = keyIndex || 0;\n\t\n\tif (keyIndex == key.length)\n\t{\n\t\treturn (this._isOccupied);\n\t}\n\telse\n\t{\n\t\tvar currentElement = key[keyIndex];\n\t\tif (this._choices.has(currentElement))\n\t\t{\n\t\t\tvar nextNode = this._choices.get(currentElement);\n\t\t\treturn nextNode.has(key, keyIndex+1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n/* IE 6 does not support __defineGetter__\nMap.prototype.__defineGetter__(\"size\", function () \n{\n\treturn this._data.length;\n});*/\n\nArrayMap.prototype.forEach = function (f, baseKey)\n{\n\tbaseKey = baseKey || new Array();\n\tif (this._isOccupied)\n\t{\n\t\tvar entry = new Entry(baseKey, this._nodeValue);\n\t\tvar result = f(entry);\n\t\tif (result != undefined)\n\t\t{\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\tif (this._choices.size > 0)\n\t{\n\t\t//!!!inefficient conversion of  to native style\n\t\tthis._choices.forEach(function (value, key, map)\n\t\t\t{\n\t\t\t\tbaseKey.push(entry.key);\n\t\t\t\tvar result = entry.value.forEach(f, baseKey);\n\t\t\t\tif (result != undefined)\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tbaseKey.pop();\n\t\t\t});\n\t\t\n\t}\n\treturn undefined;\n}\n\nArrayMap.prototype.clone = function ()\n{\n\t//Diag.trace(\"ArrayMap.clone():\");\n\t//Diag.trace(\"this = \"+this);\n\tvar spawn = new ArrayMap();\n\tthis.forEach(function (entry)\n\t\t{\n\t\t\tspawn.set(entry.key.clone(), entry.value.clone());\n\t\t});\n\t//Diag.trace(\"spawn = \"+spawn);\n\t\n\treturn spawn;\n}\n\nArrayMap.prototype.toString = function ()\n{\n\tvar result = \"{\\n\";\n\tthis.forEach(function (entry)\n\t\t{\n\t\t\tresult += \"\\t\"+entry+\"\\n\";\n\t\t});\n\tresult += \"}\";\n\treturn result;\n}\n\n/*** Private ***/\n\nArrayMap.prototype._looksLike = function (a, b)\n{\n\tif (a == b)\n\t{\n\t\t////Diag.trace(\"Return true: both are primitively equal\");\n\t\treturn true;\n\t}\n\telse if (a instanceof Object && b instanceof Object)\n\t{\n\t\tfor (var i in a)\n\t\t{\n\t\t\tif (!this._looksLike(a[i], b[i]))\n\t\t\t{\n\t\t\t\t////Diag.trace(\"Return false: both are objects, but property \"+i+\"not equal (\"+a[i]+\" != \"+b[i]+\")\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tfor (var i in b)\n\t\t{\n\t\t\t//because all properties of a exist and are equal in b, all it takes is for a property in b to not exist in a, and we know it will not be equal. Checking to see if it equals undefined instead of b[i] saves the access time of b[i].\n\t\t\tif (a[i] == undefined)\n\t\t\t{\n\t\t\t\t////Diag.trace(\"Return false: both are objects, but property \\\"\"+i+\"\\\" not equal (\"+a[i]+\" != \"+b[i]+\")\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t////Diag.trace(\"Return true: both are identical objects\");\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\t////Diag.trace(\"Return false: neither both primitive and equal nor both objects\");\n\t\treturn false;\n\t}\n}\n\nArrayMap.prototype._calculateSize = function ()\n{\n\tvar size = 0;\n\t\n\tif (this._isOccupied)\n\t{\n\t\tsize++;\n\t}\n\t\n\tthis._choices.forEach(function (key, value)\n\t\t{\n\t\t\tsize += value.size;\n\t\t});\n\t\n\tthis.size = size;\n}\n\nmodule.exports = ArrayMap;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("var pug = __webpack_require__(4);\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_html = pug_html + \"\\u003C?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?\\u003E\\n\\u003C!DOCTYPE html PUBLIC \\\"-\\u002F\\u002FW3C\\u002F\\u002FDTD XHTML 1.0 Transitional\\u002F\\u002FEN\\\" \\\"http:\\u002F\\u002Fwww.w3.org\\u002FTR\\u002Fxhtml1\\u002FDTD\\u002Fxhtml1-transitional.dtd\\\"\\u003E\\u003C!DOCTYPE html\\u003E\\u003Chtml\\u003E\\u003Chead\\u003E\\n\\t\\u003Ctitle\\u003ERPS Learner v.1.2\\u003C\\u002Ftitle\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FPage.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003C!-- Debug: include all scripts manually --\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FDiag.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FMap.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FEntry.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FState%20Learner\\u002FStateLine.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FState%20Learner\\u002FStateLearner.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FState%20Learner\\u002FPredictionData.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FIncidenceMap.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003Cscript type=\\\"text\\u002Fjavascript\\\" src=\\\"..\\u002F..\\u002FArrayMap.js\\\"\\u003E\\u003C\\u002Fscript\\u003E\\n\\t\\u003C!---\\u002Fdebug --\\u003E\\n\\t\\u003Cstyle type=\\\"text\\u002Fcss\\\"\\u003E\\n\\t\\tbody\\n\\t\\t{\\n\\t\\t\\tmargin:0px;\\n\\t\\t\\tpadding:0px;\\n\\t\\t\\ttext-align:center;\\n\\t\\t\\tfont-size:16px;\\n\\t\\t}\\n\\t\\t\\n\\t\\t#centeredBlock\\n\\t\\t{\\n\\t\\t\\twidth:750px;\\n\\t\\t\\ttext-align:left;\\n\\t\\t\\tmargin:0px auto;\\n\\t\\t}\\n\\t\\t\\n\\t\\tp\\n\\t\\t{\\n\\t\\t\\ttext-indent:30px;\\n\\t\\t}\\n\\t\\t\\n\\t\\t#rPSTable\\n\\t\\t{\\n\\t\\t\\tfloat:left;\\n\\t\\t\\tmargin-right:40px;\\n\\t\\t\\tborder-spacing:3px;\\n\\t\\t}\\n\\t\\t\\n\\t\\ttd\\n\\t\\t{\\n\\t\\t\\tpadding:4px;\\n\\t\\t\\theight:30px;\\n\\t\\t\\ttext-align:center;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.indexColumn\\n\\t\\t{\\n\\t\\t\\twidth:150px;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.stateColumn\\n\\t\\t{\\n\\t\\t\\twidth:50px;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.button\\n\\t\\t{\\n\\t\\t\\tbackground-color:#EEF5F5;\\n\\t\\t\\tborder:solid 1px black;\\n\\t\\t\\tpadding:0px;\\n\\t\\t\\t-moz-border-radius:7px;\\n\\t\\t\\tcursor:pointer;\\n\\t\\t\\tfont-size:25px;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.button:hover\\n\\t\\t{\\n\\t\\t\\tbackground-color:#CFC;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.humanSelect, .aISelect, .bothSelect\\n\\t\\t{\\n\\t\\t\\tdisplay:block;\\n\\t\\t\\tmargin:auto;\\n\\t\\t\\twidth:30px;\\n\\t\\t\\theight:30px;\\n\\t\\t\\ttext-align:center;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.humanSelect\\n\\t\\t{\\n\\t\\t\\topacity:0.5;\\n\\t\\t\\tbackground-color:red;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.aISelect\\n\\t\\t{\\n\\t\\t\\topacity:0.5;\\n\\t\\t\\tbackground-color:blue;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.bothSelect\\n\\t\\t{\\n\\t\\t\\tbackground-color:purple;\\n\\t\\t}\\n\\t\\t\\n\\t\\t#statistics td\\n\\t\\t{\\n\\t\\t\\ttext-align:left;\\n\\t\\t\\tfont-size:18px;\\n\\t\\t}\\n\\t\\t\\n\\t\\t#aIAccuracy, #aIGain, #normalizedGain\\n\\t\\t{\\n\\t\\t\\tfont-size:20px;\\n\\t\\t\\tfont-family:monospace;\\n\\t\\t}\\n\\t\\u003C\\u002Fstyle\\u003E\\n\\u003C\\u002Fhead\\u003E\\n\\u003Cbody\\u003E\\n\\t\\u003Cb\\u003ERock, Paper, Scissors Learner:\\u003C\\u002Fb\\u003E\\u003Cbr \\u002F\\u003E\\n\\tan AI opponent that plays and gets better through practice. \\u003Ca href=\\\"AboutRPSLearner.html\\\"\\u003EMore information...\\u003C\\u002Fa\\u003E\\u003Cbr \\u002F\\u003E\\n\\t\\u003Cdiv id=\\\"centeredBlock\\\"\\u003E\\n\\t\\t\\u003Cp\\u003E\\u003Cb\\u003ENote:\\u003C\\u002Fb\\u003E The computer's predictions are just that: \\u003Ci\\u003Epredictions\\u003C\\u002Fi\\u003E of your next choice. If the computer were actually choosing its own moves, as you are, it would just choose the move that would beat its prediction. In this demonstration, the computer's predictions are just left at predictions so that it's easier to see when it wins (whenever your choice and its prediction overlap, which is purple in the history.)\\u003C\\u002Fp\\u003E\\n\\t\\t\\n\\t\\t\\u003Cdiv\\u003E\\n\\t\\t\\t\\u003Ctable id=\\\"rPSTable\\\"\\u003E\\n\\t\\t\\t\\t\\u003Cthead\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd class=\\\"indexColumn\\\"\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd class=\\\"stateColumn\\\"\\u003ERock\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd class=\\\"stateColumn\\\"\\u003EPaper\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd class=\\\"stateColumn\\\"\\u003EScissors\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\u003C\\u002Fthead\\u003E\\n\\t\\t\\t\\t\\u003Ctbody id=\\\"tableBody\\\"\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003Cspan class=\\\"humanSelect\\\" style=\\\"float:left; width:1em; height:1em;\\\"\\u003E\\u003C\\u002Fspan\\u003EYour choice\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd class=\\\"button\\\" onclick=\\\"selectRock()\\\"\\u003E&#x235C;\\u003C!-- alternative button labels: Rock &#x25EF; &#x235C; &#x2296; &#x2295; &#x2297; &#x20DD; --\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd class=\\\"button\\\" onclick=\\\"selectPaper()\\\"\\u003E&#x2395;\\u003C!-- alternative button labels: Paper --\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd class=\\\"button\\\" onclick=\\\"selectScissors()\\\"\\u003E&#x2704;\\u003C!-- alternative button labels: Scissors &#x2703; --\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003Cspan class=\\\"aISelect\\\" style=\\\"float:left; width:1em; height:1em;\\\"\\u003E\\u003C\\u002Fspan\\u003EAI's prediction\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003Cdiv id=\\\"rockGuess\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003Cdiv id=\\\"paperGuess\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003Cdiv id=\\\"scissorsGuess\\\"\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003EHistory:\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\u003C\\u002Ftbody\\u003E\\n\\t\\t\\t\\u003C\\u002Ftable\\u003E\\n\\t\\t\\t\\n\\t\\t\\t\\u003C!-- options section --\\u003E\\n\\t\\t\\t\\u003Cinput id=\\\"guessVisible\\\" name=\\\"guessVisible\\\" type=\\\"checkbox\\\" onclick=\\\"enforcePredictionVisibility()\\\" \\u002F\\u003EAI Prediction visible\\u003Cbr \\u002F\\u003E\\n\\t\\t\\tRecall limit: \\u003Cinput id=\\\"recall\\\" name=\\\"recall\\\" type=\\\"text\\\" onblur=\\\"enforceRecall()\\\" value=\\\"Infinity\\\" style=\\\"font-size:18px;width:5em;font-family:monospace;\\\"\\u003E\\u003Cbr \\u002F\\u003E\\n\\t\\t\\t\\u003Cbr \\u002F\\u003E\\n\\t\\t\\t\\u003Chr \\u002F\\u003E\\n\\t\\t\\t\\u003Cbr \\u002F\\u003E\\n\\t\\t\\t\\n\\t\\t\\t\\u003Ctable id=\\\"statistics\\\"\\u003E\\n\\t\\t\\t\\t\\u003Ctbody\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003EAI Accuracy:\\u003C\\u002Ftd\\u003E\\t\\u003Ctd\\u003E\\u003Cspan id=\\\"aIAccuracy\\\"\\u003E\\u003C\\u002Fspan\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003EGain from AI:\\u003C\\u002Ftd\\u003E\\t\\u003Ctd\\u003E\\u003Cspan id=\\\"aIGain\\\"\\u003E\\u003C\\u002Fspan\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\t\\u003Ctr\\u003E\\n\\t\\t\\t\\t\\t\\t\\u003Ctd\\u003ENormalized:\\u003C\\u002Ftd\\u003E\\t\\u003Ctd\\u003E\\u003Cspan id=\\\"normalizedGain\\\"\\u003E\\u003C\\u002Fspan\\u003E\\u003C\\u002Ftd\\u003E\\n\\t\\t\\t\\t\\t\\u003C\\u002Ftr\\u003E\\n\\t\\t\\t\\t\\u003C\\u002Ftbody\\u003E\\n\\t\\t\\t\\u003C\\u002Ftable\\u003E\\n\\t\\t\\u003C\\u002Fdiv\\u003E\\n\\t\\t\\u003Cbr \\u002F\\u003E\\n\\t\\t\\u003Cbr \\u002F\\u003E\\n\\t\\t\\u003Cbr \\u002F\\u003E\\n\\t\\t\\u003Cbr \\u002F\\u003E\\n\\t\\u003C\\u002Fdiv\\u003E\\n\\u003C\\u002Fbody\\u003E\\u003C\\u002Fhtml\\u003E\";;return pug_html;};\nmodule.exports = template;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

eval("\n\n/****** ABOUT ******\n\nStateLearner\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2006.07.13\n\tReleased: \n\tDescription: An object that takes input and stores into history, which it uses to try to predict the next input.\n\t\n\t\n****** ***** ******/\n\nconst ArrayMap = __webpack_require__(0);\nconst PredictionData = __webpack_require__(7);\nconst StateLine = __webpack_require__(8);\n\n\n/******** CONSTRUCTOR ********/\n\nfunction StateLearner (recall)\n{\n\tthis.recall = recall || Infinity;\n\tthis._stateLine = new StateLine();\n}\n\n\n/******** PROPERTIES ********/\n\n//Maximum length for a sequence of states to be stored or retrieved\nStateLearner.prototype.recall;\n//This state learner's state line\nStateLearner.prototype._stateLine;\n\n\n/******** METHODS ********/\n\nStateLearner.prototype.append = function (state)\n{\n\tthis._stateLine.add(state);\n}\n\nStateLearner.prototype.makePrediction = function ()\n{\n\t//???: potentials should really be a set, but I just don't have one made yet. But isn't an array sufficient, even better? I'm pretty sure that direct access to an element of an array would be faster than a getter method on a set object by orders of magnitude.\n\n\tvar historyFragment = this._stateLine.history.slice(0);\n\t//we know we won't be able to find any states that have come after the entire history, start with the second-longest history by removing the most distant state\n\thistoryFragment.shift();\n\t//only search for as much history as this instance can recall. Since the state that is potentially to be found in incidence is counted when counting recall capacity, history fragment can only be recall-1\n\twhile (historyFragment.length > this.recall-1)\n\t{\n\t\thistoryFragment.shift();\n\t}\n\t\n\tvar potentials = new Array();\n\tvar predictionData = new PredictionData();\n\twhile (historyFragment.length >= 0)\n\t{\n\t\t//at the end of each round, if there is only one potential state, that means that all other potential states have been eliminated in previous iterations, so we return that. As a result, if at the beginning of an iteration, potentials is non-empty, that means that there must have been more than one left at the end of the last iteration. When there is more than one left, that means there was a tie at the end of the last iteration, so we settle that by finding a maximum among potentials in the incidence of this iteration. If potentials is empty, however, we fill it with the maxima of incidence. If we fill potentials with all of incidence when it is empty, we can use the same algorithm when potentials is empty as when it is non-empty.\n\t\tvar incidence = this._stateLine.incidenceFollowing(historyFragment);\n\n\t\tif (potentials.length == 0)\n\t\t{\n\t\t\tincidence.forEach(function (value, key) {\n\t\t\t\tpotentials.push(key);\n\t\t\t});\n\t\t\t\n\t\t\tif (potentials.length >= 1) predictionData.matchLength = historyFragment.length;\n\t\t}\n\t\tvar max = 0;\n\t\tvar newPotentials = new Array();\n\t\tfor (var i = 0; i <= potentials.length-1; i++)\n\t\t{\n\t\t\tvar currentState = potentials[i];\n\t\t\tvar stateCount = incidence.get(currentState);\n\t\t\tif (stateCount > max)\n\t\t\t{\n\t\t\t\tmax = stateCount;\n\t\t\t\tnewPotentials = new Array();\n\t\t\t\tnewPotentials.push(currentState);\n\t\t\t}\n\t\t\telse if (stateCount == max)\n\t\t\t{\n\t\t\t\tnewPotentials.push(currentState);\n\t\t\t}\n\t\t}\n\t\tpotentials = newPotentials;\n\n\t\tif (potentials.length == 1)\n\t\t{\n\t\t\tpredictionData.states = potentials;\n\t\t\treturn predictionData;\n\t\t}\n\t\telse if (historyFragment.length == 0)\n\t\t{\n\t\t\tif (potentials.length == 0)\n\t\t\t{\n\t\t\t\t//because all history including null history has been checked for a match and potentials is still empty, we can infer that there was never any input to begin with.\n\t\t\t\t\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//since there hasn't been a solitary maximum found at any level of detail, and the list of potentials is non-empty, we know that there must be a tie between two or more states. By returning the potentials array, the user can choose what to do with the all the relevant information available.\n\t\t\t\tpredictionData.states = potentials;\n\t\t\t\treturn predictionData;\n\t\t\t}\n\t\t}\n\t\t\n\t\thistoryFragment.shift();\n\t}\n\t\n\t//recall is 0, so it's impossible to predict anything\n\treturn undefined;\n}\n\nmodule.exports = StateLearner;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9TdGF0ZUxlYXJuZXIuanM/YjI1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLyoqKioqKiBBQk9VVCAqKioqKipcblxuU3RhdGVMZWFybmVyXG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNi4wNy4xM1xuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBbiBvYmplY3QgdGhhdCB0YWtlcyBpbnB1dCBhbmQgc3RvcmVzIGludG8gaGlzdG9yeSwgd2hpY2ggaXQgdXNlcyB0byB0cnkgdG8gcHJlZGljdCB0aGUgbmV4dCBpbnB1dC5cblx0XG5cdFxuKioqKioqICoqKioqICoqKioqKi9cblxuY29uc3QgQXJyYXlNYXAgPSByZXF1aXJlKFwiLi9BcnJheU1hcC5qc1wiKTtcbmNvbnN0IFByZWRpY3Rpb25EYXRhID0gcmVxdWlyZShcIi4vUHJlZGljdGlvbkRhdGEuanNcIik7XG5jb25zdCBTdGF0ZUxpbmUgPSByZXF1aXJlKFwiLi9TdGF0ZUxpbmUuanNcIik7XG5cblxuLyoqKioqKioqIENPTlNUUlVDVE9SICoqKioqKioqL1xuXG5mdW5jdGlvbiBTdGF0ZUxlYXJuZXIgKHJlY2FsbClcbntcblx0dGhpcy5yZWNhbGwgPSByZWNhbGwgfHwgSW5maW5pdHk7XG5cdHRoaXMuX3N0YXRlTGluZSA9IG5ldyBTdGF0ZUxpbmUoKTtcbn1cblxuXG4vKioqKioqKiogUFJPUEVSVElFUyAqKioqKioqKi9cblxuLy9NYXhpbXVtIGxlbmd0aCBmb3IgYSBzZXF1ZW5jZSBvZiBzdGF0ZXMgdG8gYmUgc3RvcmVkIG9yIHJldHJpZXZlZFxuU3RhdGVMZWFybmVyLnByb3RvdHlwZS5yZWNhbGw7XG4vL1RoaXMgc3RhdGUgbGVhcm5lcidzIHN0YXRlIGxpbmVcblN0YXRlTGVhcm5lci5wcm90b3R5cGUuX3N0YXRlTGluZTtcblxuXG4vKioqKioqKiogTUVUSE9EUyAqKioqKioqKi9cblxuU3RhdGVMZWFybmVyLnByb3RvdHlwZS5hcHBlbmQgPSBmdW5jdGlvbiAoc3RhdGUpXG57XG5cdHRoaXMuX3N0YXRlTGluZS5hZGQoc3RhdGUpO1xufVxuXG5TdGF0ZUxlYXJuZXIucHJvdG90eXBlLm1ha2VQcmVkaWN0aW9uID0gZnVuY3Rpb24gKClcbntcblx0Ly8/Pz86IHBvdGVudGlhbHMgc2hvdWxkIHJlYWxseSBiZSBhIHNldCwgYnV0IEkganVzdCBkb24ndCBoYXZlIG9uZSBtYWRlIHlldC4gQnV0IGlzbid0IGFuIGFycmF5IHN1ZmZpY2llbnQsIGV2ZW4gYmV0dGVyPyBJJ20gcHJldHR5IHN1cmUgdGhhdCBkaXJlY3QgYWNjZXNzIHRvIGFuIGVsZW1lbnQgb2YgYW4gYXJyYXkgd291bGQgYmUgZmFzdGVyIHRoYW4gYSBnZXR0ZXIgbWV0aG9kIG9uIGEgc2V0IG9iamVjdCBieSBvcmRlcnMgb2YgbWFnbml0dWRlLlxuXG5cdHZhciBoaXN0b3J5RnJhZ21lbnQgPSB0aGlzLl9zdGF0ZUxpbmUuaGlzdG9yeS5zbGljZSgwKTtcblx0Ly93ZSBrbm93IHdlIHdvbid0IGJlIGFibGUgdG8gZmluZCBhbnkgc3RhdGVzIHRoYXQgaGF2ZSBjb21lIGFmdGVyIHRoZSBlbnRpcmUgaGlzdG9yeSwgc3RhcnQgd2l0aCB0aGUgc2Vjb25kLWxvbmdlc3QgaGlzdG9yeSBieSByZW1vdmluZyB0aGUgbW9zdCBkaXN0YW50IHN0YXRlXG5cdGhpc3RvcnlGcmFnbWVudC5zaGlmdCgpO1xuXHQvL29ubHkgc2VhcmNoIGZvciBhcyBtdWNoIGhpc3RvcnkgYXMgdGhpcyBpbnN0YW5jZSBjYW4gcmVjYWxsLiBTaW5jZSB0aGUgc3RhdGUgdGhhdCBpcyBwb3RlbnRpYWxseSB0byBiZSBmb3VuZCBpbiBpbmNpZGVuY2UgaXMgY291bnRlZCB3aGVuIGNvdW50aW5nIHJlY2FsbCBjYXBhY2l0eSwgaGlzdG9yeSBmcmFnbWVudCBjYW4gb25seSBiZSByZWNhbGwtMVxuXHR3aGlsZSAoaGlzdG9yeUZyYWdtZW50Lmxlbmd0aCA+IHRoaXMucmVjYWxsLTEpXG5cdHtcblx0XHRoaXN0b3J5RnJhZ21lbnQuc2hpZnQoKTtcblx0fVxuXHRcblx0dmFyIHBvdGVudGlhbHMgPSBuZXcgQXJyYXkoKTtcblx0dmFyIHByZWRpY3Rpb25EYXRhID0gbmV3IFByZWRpY3Rpb25EYXRhKCk7XG5cdHdoaWxlIChoaXN0b3J5RnJhZ21lbnQubGVuZ3RoID49IDApXG5cdHtcblx0XHQvL2F0IHRoZSBlbmQgb2YgZWFjaCByb3VuZCwgaWYgdGhlcmUgaXMgb25seSBvbmUgcG90ZW50aWFsIHN0YXRlLCB0aGF0IG1lYW5zIHRoYXQgYWxsIG90aGVyIHBvdGVudGlhbCBzdGF0ZXMgaGF2ZSBiZWVuIGVsaW1pbmF0ZWQgaW4gcHJldmlvdXMgaXRlcmF0aW9ucywgc28gd2UgcmV0dXJuIHRoYXQuIEFzIGEgcmVzdWx0LCBpZiBhdCB0aGUgYmVnaW5uaW5nIG9mIGFuIGl0ZXJhdGlvbiwgcG90ZW50aWFscyBpcyBub24tZW1wdHksIHRoYXQgbWVhbnMgdGhhdCB0aGVyZSBtdXN0IGhhdmUgYmVlbiBtb3JlIHRoYW4gb25lIGxlZnQgYXQgdGhlIGVuZCBvZiB0aGUgbGFzdCBpdGVyYXRpb24uIFdoZW4gdGhlcmUgaXMgbW9yZSB0aGFuIG9uZSBsZWZ0LCB0aGF0IG1lYW5zIHRoZXJlIHdhcyBhIHRpZSBhdCB0aGUgZW5kIG9mIHRoZSBsYXN0IGl0ZXJhdGlvbiwgc28gd2Ugc2V0dGxlIHRoYXQgYnkgZmluZGluZyBhIG1heGltdW0gYW1vbmcgcG90ZW50aWFscyBpbiB0aGUgaW5jaWRlbmNlIG9mIHRoaXMgaXRlcmF0aW9uLiBJZiBwb3RlbnRpYWxzIGlzIGVtcHR5LCBob3dldmVyLCB3ZSBmaWxsIGl0IHdpdGggdGhlIG1heGltYSBvZiBpbmNpZGVuY2UuIElmIHdlIGZpbGwgcG90ZW50aWFscyB3aXRoIGFsbCBvZiBpbmNpZGVuY2Ugd2hlbiBpdCBpcyBlbXB0eSwgd2UgY2FuIHVzZSB0aGUgc2FtZSBhbGdvcml0aG0gd2hlbiBwb3RlbnRpYWxzIGlzIGVtcHR5IGFzIHdoZW4gaXQgaXMgbm9uLWVtcHR5LlxuXHRcdHZhciBpbmNpZGVuY2UgPSB0aGlzLl9zdGF0ZUxpbmUuaW5jaWRlbmNlRm9sbG93aW5nKGhpc3RvcnlGcmFnbWVudCk7XG5cblx0XHRpZiAocG90ZW50aWFscy5sZW5ndGggPT0gMClcblx0XHR7XG5cdFx0XHRpbmNpZGVuY2UuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGtleSkge1xuXHRcdFx0XHRwb3RlbnRpYWxzLnB1c2goa2V5KTtcblx0XHRcdH0pO1xuXHRcdFx0XG5cdFx0XHRpZiAocG90ZW50aWFscy5sZW5ndGggPj0gMSkgcHJlZGljdGlvbkRhdGEubWF0Y2hMZW5ndGggPSBoaXN0b3J5RnJhZ21lbnQubGVuZ3RoO1xuXHRcdH1cblx0XHR2YXIgbWF4ID0gMDtcblx0XHR2YXIgbmV3UG90ZW50aWFscyA9IG5ldyBBcnJheSgpO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDw9IHBvdGVudGlhbHMubGVuZ3RoLTE7IGkrKylcblx0XHR7XG5cdFx0XHR2YXIgY3VycmVudFN0YXRlID0gcG90ZW50aWFsc1tpXTtcblx0XHRcdHZhciBzdGF0ZUNvdW50ID0gaW5jaWRlbmNlLmdldChjdXJyZW50U3RhdGUpO1xuXHRcdFx0aWYgKHN0YXRlQ291bnQgPiBtYXgpXG5cdFx0XHR7XG5cdFx0XHRcdG1heCA9IHN0YXRlQ291bnQ7XG5cdFx0XHRcdG5ld1BvdGVudGlhbHMgPSBuZXcgQXJyYXkoKTtcblx0XHRcdFx0bmV3UG90ZW50aWFscy5wdXNoKGN1cnJlbnRTdGF0ZSk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmIChzdGF0ZUNvdW50ID09IG1heClcblx0XHRcdHtcblx0XHRcdFx0bmV3UG90ZW50aWFscy5wdXNoKGN1cnJlbnRTdGF0ZSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHBvdGVudGlhbHMgPSBuZXdQb3RlbnRpYWxzO1xuXG5cdFx0aWYgKHBvdGVudGlhbHMubGVuZ3RoID09IDEpXG5cdFx0e1xuXHRcdFx0cHJlZGljdGlvbkRhdGEuc3RhdGVzID0gcG90ZW50aWFscztcblx0XHRcdHJldHVybiBwcmVkaWN0aW9uRGF0YTtcblx0XHR9XG5cdFx0ZWxzZSBpZiAoaGlzdG9yeUZyYWdtZW50Lmxlbmd0aCA9PSAwKVxuXHRcdHtcblx0XHRcdGlmIChwb3RlbnRpYWxzLmxlbmd0aCA9PSAwKVxuXHRcdFx0e1xuXHRcdFx0XHQvL2JlY2F1c2UgYWxsIGhpc3RvcnkgaW5jbHVkaW5nIG51bGwgaGlzdG9yeSBoYXMgYmVlbiBjaGVja2VkIGZvciBhIG1hdGNoIGFuZCBwb3RlbnRpYWxzIGlzIHN0aWxsIGVtcHR5LCB3ZSBjYW4gaW5mZXIgdGhhdCB0aGVyZSB3YXMgbmV2ZXIgYW55IGlucHV0IHRvIGJlZ2luIHdpdGguXG5cdFx0XHRcdFxuXHRcdFx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZVxuXHRcdFx0e1xuXHRcdFx0XHQvL3NpbmNlIHRoZXJlIGhhc24ndCBiZWVuIGEgc29saXRhcnkgbWF4aW11bSBmb3VuZCBhdCBhbnkgbGV2ZWwgb2YgZGV0YWlsLCBhbmQgdGhlIGxpc3Qgb2YgcG90ZW50aWFscyBpcyBub24tZW1wdHksIHdlIGtub3cgdGhhdCB0aGVyZSBtdXN0IGJlIGEgdGllIGJldHdlZW4gdHdvIG9yIG1vcmUgc3RhdGVzLiBCeSByZXR1cm5pbmcgdGhlIHBvdGVudGlhbHMgYXJyYXksIHRoZSB1c2VyIGNhbiBjaG9vc2Ugd2hhdCB0byBkbyB3aXRoIHRoZSBhbGwgdGhlIHJlbGV2YW50IGluZm9ybWF0aW9uIGF2YWlsYWJsZS5cblx0XHRcdFx0cHJlZGljdGlvbkRhdGEuc3RhdGVzID0gcG90ZW50aWFscztcblx0XHRcdFx0cmV0dXJuIHByZWRpY3Rpb25EYXRhO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRcblx0XHRoaXN0b3J5RnJhZ21lbnQuc2hpZnQoKTtcblx0fVxuXHRcblx0Ly9yZWNhbGwgaXMgMCwgc28gaXQncyBpbXBvc3NpYmxlIHRvIHByZWRpY3QgYW55dGhpbmdcblx0cmV0dXJuIHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTdGF0ZUxlYXJuZXI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N0YXRlLWxlYXJuZXIvU3RhdGVMZWFybmVyLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("const markupFactory = __webpack_require__(1);\n//there are no variables to pass to the template. Being verbose because I am unfamiliar\nconst markup = markupFactory({});\ndocument.write(markup);\n\n(function () {\n  const StateLearner = __webpack_require__(2);\n  /* ???: 2017.05.29: Discovered comments said that these were used directly, but I can't see how. Possibly was originally intended as \"types that are intantiated by other classes, but used here\"? The PredictionData type is returned and by one of the methods used by this class (stateLearner.makePrediction).\n  const PredictionData = require(\"PredictionData.js\");\n  //const IncidenceMap = require(\"IncidenceMap.js\");\n  const ArrayMap = require(\"ArrayMap.js\");\n  */\n\n  //faux enumeration\n  //???: is there a new way of doing enumerations in ECMAScript? Should I use it here?\n  var ROCK = \"R\";\n  var PAPER = \"P\";\n  var SCISSORS = \"S\";\n\n  //construct\n  var rPSAI;\n  var lastPrediction;\n  var roundsPassed;\n  var allStates;\n  var aIWins;\n  window.onload = function ()\n  {\n    roundsPassed = 0;\n    allStates = new Array(ROCK, PAPER, SCISSORS);\n    aIWins = 0;\n    rPSAI = new StateLearner();\n    enforceRecall();\n    renewPrediction();\n  }\n\n  function enforcePredictionVisibility ()\n  {\n    function setInsidesOfTo (node, displayStyle)\n    {\n      if (node.firstChild)\n      {\n        node.firstChild.style.display = displayStyle;\n      }\n    }\n    \n    var checkbox = document.getElementById(\"guessVisible\");\n    if (!checkbox.checked)\n    {\n      setInsidesOfTo(document.getElementById(\"rockGuess\"), \"none\");\n      setInsidesOfTo(document.getElementById(\"paperGuess\"), \"none\");\n      setInsidesOfTo(document.getElementById(\"scissorsGuess\"), \"none\");\n    }\n    else\n    {\n      setInsidesOfTo(document.getElementById(\"rockGuess\"), \"block\");\n      setInsidesOfTo(document.getElementById(\"paperGuess\"), \"block\");\n      setInsidesOfTo(document.getElementById(\"scissorsGuess\"), \"block\");\n    }\n  }\n\n  function enforceRecall ()\n  {\n    var recallNode = document.getElementById(\"recall\");\n    \n    var enteredRecall = Number(recallNode.value);\n    if (isNaN(enteredRecall))\n    {\n      //this will also catch misspellings of \"Infinity,\" like \"infinity,\" so we don't need to catch those specifically.\n      enteredRecall = Infinity;\n    }\n    else if (enteredRecall < 0)\n    {\n      enteredRecall = 0;\n    }\n    else\n    {\n      enteredRecall = Math.round(enteredRecall, 1);\n    }\n    \n    rPSAI.recall = enteredRecall;\n    recallNode.value = enteredRecall;\n  }\n\n  function getPredictionCellOf (state)\n  {\n    var predictionCell;\n    if (state == ROCK)\n    {\n      predictionCell = document.getElementById(\"rockGuess\");\n    }\n    else if (state == PAPER)\n    {\n      predictionCell = document.getElementById(\"paperGuess\");\n    }\n    else if (state == SCISSORS)\n    {\n      predictionCell = document.getElementById(\"scissorsGuess\");\n    }\n    return predictionCell;\n  }\n\n  function selectRock ()\n  {\n    rPSAI.takeInput(ROCK);\n    addHistory(ROCK, lastPrediction);\n    renewPrediction();\n  }\n\n  function selectPaper ()\n  {\n    rPSAI.takeInput(PAPER);\n    addHistory(PAPER, lastPrediction);\n    renewPrediction();\n  }\n\n  function selectScissors ()\n  {\n    rPSAI.takeInput(SCISSORS);\n    addHistory(SCISSORS, lastPrediction);\n    renewPrediction();\n  }\n\n  function renewPrediction ()\n  {\n    //clear old prediction\n    if (lastPrediction != undefined)\n    {\n      var oldPredictionCell = getPredictionCellOf(lastPrediction);\n      var oldPredictionSpan = oldPredictionCell.childNodes[0];\n      oldPredictionCell.removeChild(oldPredictionSpan);\n    }\n    \n    var predictionData = rPSAI.makePrediction();\n    if (predictionData.matchLength == undefined)\n    {\n      //if predictionData.matchLength is undefined, that means that StateLearner was forced to make a prediction without any data.\n      var randomIndex = Math.round(Math.random()*(allStates.length-1));\n      var newPrediction = allStates[randomIndex];\n    }\n    else if (predictionData.states.length >= 2)\n    {\n      //if predictionData.state is an array of more than one element, it means that the contents of the array should be treated as a Set of states that were tied in match length\n      var randomIndex = Math.round(Math.random()*(predictionData.states.length-1));\n      var newPrediction = predictionData.states[randomIndex];\n    }\n    else\n    {\n      var newPrediction = predictionData.states[0];\n    }\n    \n    var predictionCell = getPredictionCellOf(newPrediction);\n    \n    var box = document.createElement(\"span\");\n    box.className = \"aISelect\";\n    predictionCell.appendChild(box);\n    \n    lastPrediction = newPrediction;\n    \n    enforcePredictionVisibility();\n  }\n\n  function addHistory (humanSelection, aISelection)\n  {\n    var tableNode = document.getElementById(\"tableBody\");\n    var recentRow = tableNode.getElementsByTagName(\"tr\")[3];\n    //remove the text \"History:\" from recent row and replace it with the round number, because it is going to be shifted down.\n    var roundCell = recentRow.getElementsByTagName(\"td\")[0];\n    var roundText = roundCell.firstChild;\n    //it's roundsPassed-1 because we're labelling the row for the round that has just passed and is being pushed down.\n    roundText.data = roundsPassed+1;\n    \n    var newRow = document.createElement(\"tr\");\n    var historyCell = document.createElement(\"td\");\n    var historyText = document.createTextNode(\"History:\");\n    historyCell.appendChild(historyText);\n    newRow.appendChild(historyCell);\n    \n    var rockCell = document.createElement(\"td\");\n    var paperCell = document.createElement(\"td\");\n    var scissorsCell = document.createElement(\"td\");\n    \n    var cellOf = new Array();\n    cellOf[ROCK] = rockCell;\n    cellOf[PAPER] = paperCell;\n    cellOf[SCISSORS] = scissorsCell;\n    \n    if (humanSelection == aISelection)\n    {\n      var selectionNode = document.createElement(\"span\");\n      selectionNode.className = \"bothSelect\";\n      var selectionCell = cellOf[humanSelection];\n      selectionCell.appendChild(selectionNode);\n    }\n    else\n    {\n      var humanSelectionNode = document.createElement(\"span\");\n      humanSelectionNode.className = \"humanSelect\";\n      var humanSelectionCell = cellOf[humanSelection];\n      humanSelectionCell.appendChild(humanSelectionNode);\n      \n      if (aISelection != undefined)\n      {\n        \n        var aISelectionNode = document.createElement(\"span\");\n        aISelectionNode.className = \"aISelect\";\n        var aISelectionCell = cellOf[aISelection];\n        aISelectionCell.appendChild(aISelectionNode);\n      }\n    }\n    \n    newRow.appendChild(rockCell);\n    newRow.appendChild(paperCell);\n    newRow.appendChild(scissorsCell);\n    \n    tableNode.insertBefore(newRow, recentRow);\n    if (roundsPassed == 0)\n    {\n      //if this is the first round, then the previous round's row that just got pushed down will be the blank placeholder row that the page is initialized with, so delete it for aesthetics' sake.\n      tableNode.removeChild(recentRow);\n    }\n    \n    //update statistics\n    if (aISelection == humanSelection)\n    {\n      aIWins++;\n    }\n    var aIAccuracyNode = document.getElementById(\"aIAccuracy\");\n    var aIGainNode = document.getElementById(\"aIGain\");\n    var normalizedNode = document.getElementById(\"normalizedGain\");\n    //the statistics are blank in the first round, and they can't be filled until two rounds have passed, so we don't have to empty them before adding the new ones if either of these conditions hold.\n    \n    //remove data if roundsPassed >= 1 because only then will there be any data to remove\n    if (roundsPassed >= 1)\n    {\n      var oldAccuracy = aIAccuracyNode.firstChild\n      var oldGain = aIGainNode.firstChild\n      var oldNormalized = normalizedNode.firstChild;\n      aIAccuracyNode.removeChild(oldAccuracy);\n      aIGainNode.removeChild(oldGain);\n      normalizedNode.removeChild(oldNormalized);\n    }\n    \n    var newAccuracy = aIWins/(roundsPassed+1);\n    //*10000/100 dance is done to get an answer to 2 decimal places\n    var newAccuracyPercentage = (Math.round(newAccuracy*10000)/100);\n    var newAccuracyText = document.createTextNode(newAccuracyPercentage+\"%\");\n    aIAccuracyNode.appendChild(newAccuracyText);\n    \n    var newGain = (newAccuracy-(1/allStates.length));\n    var newGainPercentage = Math.round(newGain*10000)/100;\n    var newGainText = document.createTextNode(newGainPercentage+\"%\");\n    aIGainNode.appendChild(newGainText);\n    \n    var newNormalized = newGain/(1/3);\n    var newNormalizedPercentage = Math.round(newNormalized*10000)/100;\n    var newNormalizedText = document.createTextNode(newNormalizedPercentage+\"%\");\n    normalizedNode.appendChild(newNormalizedText);\n    \n    roundsPassed++;\n  }\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      var valB = pug_style(b[key]);\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\nexports.classes = pug_classes;\nfunction pug_classes_array(val, escaping) {\n  var classString = '', className, padding = '', escapeEnabled = Array.isArray(escaping);\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n  return classString;\n}\nfunction pug_classes_object(val) {\n  var classString = '', padding = '';\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n  return classString;\n}\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\nexports.style = pug_style;\nfunction pug_style(val) {\n  if (!val) return '';\n  if (typeof val === 'object') {\n    var out = '';\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n    return out;\n  } else {\n    val += '';\n    if (val[val.length - 1] !== ';') \n      return val + ';';\n    return val;\n  }\n};\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = pug_attr;\nfunction pug_attr(key, val, escaped, terse) {\n  if (val === false || val == null || !val && (key === 'class' || key === 'style')) {\n    return '';\n  }\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n  if (typeof val.toJSON === 'function') {\n    val = val.toJSON();\n  }\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + '=\\'' + val.replace(/'/g, '&#39;') + '\\'';\n    }\n  }\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n};\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\nexports.attrs = pug_attrs;\nfunction pug_attrs(obj, terse){\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\nfunction pug_escape(_html){\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n\n  var result = '';\n  var i, lastIndex, escape;\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34: escape = '&quot;'; break;\n      case 38: escape = '&amp;'; break;\n      case 60: escape = '&lt;'; break;\n      case 62: escape = '&gt;'; break;\n      default: continue;\n    }\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);\n  else return result;\n};\n\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\nexports.rethrow = pug_rethrow;\nfunction pug_rethrow(err, filename, lineno, str){\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str = str || __webpack_require__(9).readFileSync(filename, 'utf8')\n  } catch (ex) {\n    pug_rethrow(err, null, lineno)\n  }\n  var context = 3\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Pug') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vcHVnLXJ1bnRpbWUvaW5kZXguanM/ZTc2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBwdWdfaGFzX293bl9wcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogTWVyZ2UgdHdvIGF0dHJpYnV0ZSBvYmplY3RzIGdpdmluZyBwcmVjZWRlbmNlXG4gKiB0byB2YWx1ZXMgaW4gb2JqZWN0IGBiYC4gQ2xhc3NlcyBhcmUgc3BlY2lhbC1jYXNlZFxuICogYWxsb3dpbmcgZm9yIGFycmF5cyBhbmQgbWVyZ2luZy9qb2luaW5nIGFwcHJvcHJpYXRlbHlcbiAqIHJlc3VsdGluZyBpbiBhIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gYVxuICogQHBhcmFtIHtPYmplY3R9IGJcbiAqIEByZXR1cm4ge09iamVjdH0gYVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5tZXJnZSA9IHB1Z19tZXJnZTtcbmZ1bmN0aW9uIHB1Z19tZXJnZShhLCBiKSB7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgdmFyIGF0dHJzID0gYVswXTtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGF0dHJzID0gcHVnX21lcmdlKGF0dHJzLCBhW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIGF0dHJzO1xuICB9XG5cbiAgZm9yICh2YXIga2V5IGluIGIpIHtcbiAgICBpZiAoa2V5ID09PSAnY2xhc3MnKSB7XG4gICAgICB2YXIgdmFsQSA9IGFba2V5XSB8fCBbXTtcbiAgICAgIGFba2V5XSA9IChBcnJheS5pc0FycmF5KHZhbEEpID8gdmFsQSA6IFt2YWxBXSkuY29uY2F0KGJba2V5XSB8fCBbXSk7XG4gICAgfSBlbHNlIGlmIChrZXkgPT09ICdzdHlsZScpIHtcbiAgICAgIHZhciB2YWxBID0gcHVnX3N0eWxlKGFba2V5XSk7XG4gICAgICB2YXIgdmFsQiA9IHB1Z19zdHlsZShiW2tleV0pO1xuICAgICAgYVtrZXldID0gdmFsQSArIHZhbEI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFba2V5XSA9IGJba2V5XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYTtcbn07XG5cbi8qKlxuICogUHJvY2VzcyBhcnJheSwgb2JqZWN0LCBvciBzdHJpbmcgYXMgYSBzdHJpbmcgb2YgY2xhc3NlcyBkZWxpbWl0ZWQgYnkgYSBzcGFjZS5cbiAqXG4gKiBJZiBgdmFsYCBpcyBhbiBhcnJheSwgYWxsIG1lbWJlcnMgb2YgaXQgYW5kIGl0cyBzdWJhcnJheXMgYXJlIGNvdW50ZWQgYXNcbiAqIGNsYXNzZXMuIElmIGBlc2NhcGluZ2AgaXMgYW4gYXJyYXksIHRoZW4gd2hldGhlciBvciBub3QgdGhlIGl0ZW0gaW4gYHZhbGAgaXNcbiAqIGVzY2FwZWQgZGVwZW5kcyBvbiB0aGUgY29ycmVzcG9uZGluZyBpdGVtIGluIGBlc2NhcGluZ2AuIElmIGBlc2NhcGluZ2AgaXNcbiAqIG5vdCBhbiBhcnJheSwgbm8gZXNjYXBpbmcgaXMgZG9uZS5cbiAqXG4gKiBJZiBgdmFsYCBpcyBhbiBvYmplY3QsIGFsbCB0aGUga2V5cyB3aG9zZSB2YWx1ZSBpcyB0cnV0aHkgYXJlIGNvdW50ZWQgYXNcbiAqIGNsYXNzZXMuIE5vIGVzY2FwaW5nIGlzIGRvbmUuXG4gKlxuICogSWYgYHZhbGAgaXMgYSBzdHJpbmcsIGl0IGlzIGNvdW50ZWQgYXMgYSBjbGFzcy4gTm8gZXNjYXBpbmcgaXMgZG9uZS5cbiAqXG4gKiBAcGFyYW0geyhBcnJheS48c3RyaW5nPnxPYmplY3QuPHN0cmluZywgYm9vbGVhbj58c3RyaW5nKX0gdmFsXG4gKiBAcGFyYW0gez9BcnJheS48c3RyaW5nPn0gZXNjYXBpbmdcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuZXhwb3J0cy5jbGFzc2VzID0gcHVnX2NsYXNzZXM7XG5mdW5jdGlvbiBwdWdfY2xhc3Nlc19hcnJheSh2YWwsIGVzY2FwaW5nKSB7XG4gIHZhciBjbGFzc1N0cmluZyA9ICcnLCBjbGFzc05hbWUsIHBhZGRpbmcgPSAnJywgZXNjYXBlRW5hYmxlZCA9IEFycmF5LmlzQXJyYXkoZXNjYXBpbmcpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHZhbC5sZW5ndGg7IGkrKykge1xuICAgIGNsYXNzTmFtZSA9IHB1Z19jbGFzc2VzKHZhbFtpXSk7XG4gICAgaWYgKCFjbGFzc05hbWUpIGNvbnRpbnVlO1xuICAgIGVzY2FwZUVuYWJsZWQgJiYgZXNjYXBpbmdbaV0gJiYgKGNsYXNzTmFtZSA9IHB1Z19lc2NhcGUoY2xhc3NOYW1lKSk7XG4gICAgY2xhc3NTdHJpbmcgPSBjbGFzc1N0cmluZyArIHBhZGRpbmcgKyBjbGFzc05hbWU7XG4gICAgcGFkZGluZyA9ICcgJztcbiAgfVxuICByZXR1cm4gY2xhc3NTdHJpbmc7XG59XG5mdW5jdGlvbiBwdWdfY2xhc3Nlc19vYmplY3QodmFsKSB7XG4gIHZhciBjbGFzc1N0cmluZyA9ICcnLCBwYWRkaW5nID0gJyc7XG4gIGZvciAodmFyIGtleSBpbiB2YWwpIHtcbiAgICBpZiAoa2V5ICYmIHZhbFtrZXldICYmIHB1Z19oYXNfb3duX3Byb3BlcnR5LmNhbGwodmFsLCBrZXkpKSB7XG4gICAgICBjbGFzc1N0cmluZyA9IGNsYXNzU3RyaW5nICsgcGFkZGluZyArIGtleTtcbiAgICAgIHBhZGRpbmcgPSAnICc7XG4gICAgfVxuICB9XG4gIHJldHVybiBjbGFzc1N0cmluZztcbn1cbmZ1bmN0aW9uIHB1Z19jbGFzc2VzKHZhbCwgZXNjYXBpbmcpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgIHJldHVybiBwdWdfY2xhc3Nlc19hcnJheSh2YWwsIGVzY2FwaW5nKTtcbiAgfSBlbHNlIGlmICh2YWwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gcHVnX2NsYXNzZXNfb2JqZWN0KHZhbCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHZhbCB8fCAnJztcbiAgfVxufVxuXG4vKipcbiAqIENvbnZlcnQgb2JqZWN0IG9yIHN0cmluZyB0byBhIHN0cmluZyBvZiBDU1Mgc3R5bGVzIGRlbGltaXRlZCBieSBhIHNlbWljb2xvbi5cbiAqXG4gKiBAcGFyYW0geyhPYmplY3QuPHN0cmluZywgc3RyaW5nPnxzdHJpbmcpfSB2YWxcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuXG5leHBvcnRzLnN0eWxlID0gcHVnX3N0eWxlO1xuZnVuY3Rpb24gcHVnX3N0eWxlKHZhbCkge1xuICBpZiAoIXZhbCkgcmV0dXJuICcnO1xuICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgb3V0ID0gJyc7XG4gICAgZm9yICh2YXIgc3R5bGUgaW4gdmFsKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgaWYgKHB1Z19oYXNfb3duX3Byb3BlcnR5LmNhbGwodmFsLCBzdHlsZSkpIHtcbiAgICAgICAgb3V0ID0gb3V0ICsgc3R5bGUgKyAnOicgKyB2YWxbc3R5bGVdICsgJzsnO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3V0O1xuICB9IGVsc2Uge1xuICAgIHZhbCArPSAnJztcbiAgICBpZiAodmFsW3ZhbC5sZW5ndGggLSAxXSAhPT0gJzsnKSBcbiAgICAgIHJldHVybiB2YWwgKyAnOyc7XG4gICAgcmV0dXJuIHZhbDtcbiAgfVxufTtcblxuLyoqXG4gKiBSZW5kZXIgdGhlIGdpdmVuIGF0dHJpYnV0ZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30ga2V5XG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGVzY2FwZWRcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdGVyc2VcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuZXhwb3J0cy5hdHRyID0gcHVnX2F0dHI7XG5mdW5jdGlvbiBwdWdfYXR0cihrZXksIHZhbCwgZXNjYXBlZCwgdGVyc2UpIHtcbiAgaWYgKHZhbCA9PT0gZmFsc2UgfHwgdmFsID09IG51bGwgfHwgIXZhbCAmJiAoa2V5ID09PSAnY2xhc3MnIHx8IGtleSA9PT0gJ3N0eWxlJykpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cbiAgaWYgKHZhbCA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiAnICcgKyAodGVyc2UgPyBrZXkgOiBrZXkgKyAnPVwiJyArIGtleSArICdcIicpO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsLnRvSlNPTiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhbCA9IHZhbC50b0pTT04oKTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbCAhPT0gJ3N0cmluZycpIHtcbiAgICB2YWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICAgIGlmICghZXNjYXBlZCAmJiB2YWwuaW5kZXhPZignXCInKSAhPT0gLTEpIHtcbiAgICAgIHJldHVybiAnICcgKyBrZXkgKyAnPVxcJycgKyB2YWwucmVwbGFjZSgvJy9nLCAnJiMzOTsnKSArICdcXCcnO1xuICAgIH1cbiAgfVxuICBpZiAoZXNjYXBlZCkgdmFsID0gcHVnX2VzY2FwZSh2YWwpO1xuICByZXR1cm4gJyAnICsga2V5ICsgJz1cIicgKyB2YWwgKyAnXCInO1xufTtcblxuLyoqXG4gKiBSZW5kZXIgdGhlIGdpdmVuIGF0dHJpYnV0ZXMgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEBwYXJhbSB7T2JqZWN0fSB0ZXJzZSB3aGV0aGVyIHRvIHVzZSBIVE1MNSB0ZXJzZSBib29sZWFuIGF0dHJpYnV0ZXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuZXhwb3J0cy5hdHRycyA9IHB1Z19hdHRycztcbmZ1bmN0aW9uIHB1Z19hdHRycyhvYmosIHRlcnNlKXtcbiAgdmFyIGF0dHJzID0gJyc7XG5cbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChwdWdfaGFzX293bl9wcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgdmFyIHZhbCA9IG9ialtrZXldO1xuXG4gICAgICBpZiAoJ2NsYXNzJyA9PT0ga2V5KSB7XG4gICAgICAgIHZhbCA9IHB1Z19jbGFzc2VzKHZhbCk7XG4gICAgICAgIGF0dHJzID0gcHVnX2F0dHIoa2V5LCB2YWwsIGZhbHNlLCB0ZXJzZSkgKyBhdHRycztcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAoJ3N0eWxlJyA9PT0ga2V5KSB7XG4gICAgICAgIHZhbCA9IHB1Z19zdHlsZSh2YWwpO1xuICAgICAgfVxuICAgICAgYXR0cnMgKz0gcHVnX2F0dHIoa2V5LCB2YWwsIGZhbHNlLCB0ZXJzZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dHJzO1xufTtcblxuLyoqXG4gKiBFc2NhcGUgdGhlIGdpdmVuIHN0cmluZyBvZiBgaHRtbGAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGh0bWxcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbnZhciBwdWdfbWF0Y2hfaHRtbCA9IC9bXCImPD5dLztcbmV4cG9ydHMuZXNjYXBlID0gcHVnX2VzY2FwZTtcbmZ1bmN0aW9uIHB1Z19lc2NhcGUoX2h0bWwpe1xuICB2YXIgaHRtbCA9ICcnICsgX2h0bWw7XG4gIHZhciByZWdleFJlc3VsdCA9IHB1Z19tYXRjaF9odG1sLmV4ZWMoaHRtbCk7XG4gIGlmICghcmVnZXhSZXN1bHQpIHJldHVybiBfaHRtbDtcblxuICB2YXIgcmVzdWx0ID0gJyc7XG4gIHZhciBpLCBsYXN0SW5kZXgsIGVzY2FwZTtcbiAgZm9yIChpID0gcmVnZXhSZXN1bHQuaW5kZXgsIGxhc3RJbmRleCA9IDA7IGkgPCBodG1sLmxlbmd0aDsgaSsrKSB7XG4gICAgc3dpdGNoIChodG1sLmNoYXJDb2RlQXQoaSkpIHtcbiAgICAgIGNhc2UgMzQ6IGVzY2FwZSA9ICcmcXVvdDsnOyBicmVhaztcbiAgICAgIGNhc2UgMzg6IGVzY2FwZSA9ICcmYW1wOyc7IGJyZWFrO1xuICAgICAgY2FzZSA2MDogZXNjYXBlID0gJyZsdDsnOyBicmVhaztcbiAgICAgIGNhc2UgNjI6IGVzY2FwZSA9ICcmZ3Q7JzsgYnJlYWs7XG4gICAgICBkZWZhdWx0OiBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGxhc3RJbmRleCAhPT0gaSkgcmVzdWx0ICs9IGh0bWwuc3Vic3RyaW5nKGxhc3RJbmRleCwgaSk7XG4gICAgbGFzdEluZGV4ID0gaSArIDE7XG4gICAgcmVzdWx0ICs9IGVzY2FwZTtcbiAgfVxuICBpZiAobGFzdEluZGV4ICE9PSBpKSByZXR1cm4gcmVzdWx0ICsgaHRtbC5zdWJzdHJpbmcobGFzdEluZGV4LCBpKTtcbiAgZWxzZSByZXR1cm4gcmVzdWx0O1xufTtcblxuLyoqXG4gKiBSZS10aHJvdyB0aGUgZ2l2ZW4gYGVycmAgaW4gY29udGV4dCB0byB0aGVcbiAqIHRoZSBwdWcgaW4gYGZpbGVuYW1lYCBhdCB0aGUgZ2l2ZW4gYGxpbmVub2AuXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyXG4gKiBAcGFyYW0ge1N0cmluZ30gZmlsZW5hbWVcbiAqIEBwYXJhbSB7U3RyaW5nfSBsaW5lbm9cbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgb3JpZ2luYWwgc291cmNlXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLnJldGhyb3cgPSBwdWdfcmV0aHJvdztcbmZ1bmN0aW9uIHB1Z19yZXRocm93KGVyciwgZmlsZW5hbWUsIGxpbmVubywgc3RyKXtcbiAgaWYgKCEoZXJyIGluc3RhbmNlb2YgRXJyb3IpKSB0aHJvdyBlcnI7XG4gIGlmICgodHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyB8fCAhZmlsZW5hbWUpICYmICFzdHIpIHtcbiAgICBlcnIubWVzc2FnZSArPSAnIG9uIGxpbmUgJyArIGxpbmVubztcbiAgICB0aHJvdyBlcnI7XG4gIH1cbiAgdHJ5IHtcbiAgICBzdHIgPSBzdHIgfHwgcmVxdWlyZSgnZnMnKS5yZWFkRmlsZVN5bmMoZmlsZW5hbWUsICd1dGY4JylcbiAgfSBjYXRjaCAoZXgpIHtcbiAgICBwdWdfcmV0aHJvdyhlcnIsIG51bGwsIGxpbmVubylcbiAgfVxuICB2YXIgY29udGV4dCA9IDNcbiAgICAsIGxpbmVzID0gc3RyLnNwbGl0KCdcXG4nKVxuICAgICwgc3RhcnQgPSBNYXRoLm1heChsaW5lbm8gLSBjb250ZXh0LCAwKVxuICAgICwgZW5kID0gTWF0aC5taW4obGluZXMubGVuZ3RoLCBsaW5lbm8gKyBjb250ZXh0KTtcblxuICAvLyBFcnJvciBjb250ZXh0XG4gIHZhciBjb250ZXh0ID0gbGluZXMuc2xpY2Uoc3RhcnQsIGVuZCkubWFwKGZ1bmN0aW9uKGxpbmUsIGkpe1xuICAgIHZhciBjdXJyID0gaSArIHN0YXJ0ICsgMTtcbiAgICByZXR1cm4gKGN1cnIgPT0gbGluZW5vID8gJyAgPiAnIDogJyAgICAnKVxuICAgICAgKyBjdXJyXG4gICAgICArICd8ICdcbiAgICAgICsgbGluZTtcbiAgfSkuam9pbignXFxuJyk7XG5cbiAgLy8gQWx0ZXIgZXhjZXB0aW9uIG1lc3NhZ2VcbiAgZXJyLnBhdGggPSBmaWxlbmFtZTtcbiAgZXJyLm1lc3NhZ2UgPSAoZmlsZW5hbWUgfHwgJ1B1ZycpICsgJzonICsgbGluZW5vXG4gICAgKyAnXFxuJyArIGNvbnRleHQgKyAnXFxuXFxuJyArIGVyci5tZXNzYWdlO1xuICB0aHJvdyBlcnI7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3B1Zy1ydW50aW1lL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

eval("/****** ABOUT ******\n\nEntry\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.07.29\n\tReleased: \n\tDescription: A key-value pair.\n\t\n\n****** ***** ******/\n\n//UNF: below was pasted from StateLearner.js, and I'm still converting it into GroupLearner\n\n/******** CONSTRUCTOR ********/\n\nfunction Entry (key, value)\n{\n\tthis.key = key;\n\tthis.value = value;\n}\n\n\n/******** PROPERTIES ********/\n\nEntry.prototype.key;\nEntry.prototype.value;\n\n\n/******** METHODS ********/\n\nEntry.prototype.clone = function ()\n{\n\treturn new Entry(this.key.clone(), this.value.clone());\n}\n\nEntry.prototype.toString = function ()\n{\n\treturn this.key+\"\\t=>\\t\"+this.value;\n}\n\nmodule.exports = Entry;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9FbnRyeS5qcz8xZDFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiogQUJPVVQgKioqKioqXG5cbkVudHJ5XG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNy4wNy4yOVxuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBIGtleS12YWx1ZSBwYWlyLlxuXHRcblxuKioqKioqICoqKioqICoqKioqKi9cblxuLy9VTkY6IGJlbG93IHdhcyBwYXN0ZWQgZnJvbSBTdGF0ZUxlYXJuZXIuanMsIGFuZCBJJ20gc3RpbGwgY29udmVydGluZyBpdCBpbnRvIEdyb3VwTGVhcm5lclxuXG4vKioqKioqKiogQ09OU1RSVUNUT1IgKioqKioqKiovXG5cbmZ1bmN0aW9uIEVudHJ5IChrZXksIHZhbHVlKVxue1xuXHR0aGlzLmtleSA9IGtleTtcblx0dGhpcy52YWx1ZSA9IHZhbHVlO1xufVxuXG5cbi8qKioqKioqKiBQUk9QRVJUSUVTICoqKioqKioqL1xuXG5FbnRyeS5wcm90b3R5cGUua2V5O1xuRW50cnkucHJvdG90eXBlLnZhbHVlO1xuXG5cbi8qKioqKioqKiBNRVRIT0RTICoqKioqKioqL1xuXG5FbnRyeS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiAoKVxue1xuXHRyZXR1cm4gbmV3IEVudHJ5KHRoaXMua2V5LmNsb25lKCksIHRoaXMudmFsdWUuY2xvbmUoKSk7XG59XG5cbkVudHJ5LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpXG57XG5cdHJldHVybiB0aGlzLmtleStcIlxcdD0+XFx0XCIrdGhpcy52YWx1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFbnRyeTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vc3RhdGUtbGVhcm5lci9FbnRyeS5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

eval("/****** ABOUT ******\n\nIncidenceMap\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.27\n\tReleased: \n\tDescription: An object which stores the number of times that a value is encountered. The difference between this and a plain map is that .get(index) returns 0 when no entry with that key exists, and this object adds the .increment(key, [times]) function which increments the count of the key the given number of times, or once if times is undefined.\n\t\n\n****** ***** ******/\n\n//try using native Map\t\n//const Map = require(\"./Map.js\");\n\n\n/******* CONSTRUCTOR *******/\n\nfunction IncidenceMap ()\n{\n\tthis._map = new Map();\n\tthis.size = 0;\n}\n\n\n/******* PROPERTIES *******/\n\nIncidenceMap.prototype._map;\nIncidenceMap.prototype.size;\n\n\n/******* METHODS *******/\n\nIncidenceMap.prototype.increment = function (key, times)\n{\n\ttimes = (times == undefined)? 1 : times;\n\tvar count = this.set(key, this.get(key)+times);\n\treturn count;\n}\n\nIncidenceMap.prototype.addMap = function (incidence)\n{\n\tvar result = new IncidenceMap();\n\t\n\tfunction count (entry)\n\t{\n\t\tresult.increment(entry.key, entry.value);\n\t}\n\t\n\tthis.forEach(count);\n\tincidence.forEach(count);\n\t\n\treturn result;\n}\n\nIncidenceMap.prototype.getMaxima = function ()\n{\n\tvar maxima = new Array();\n\tvar maxCount = 0;\n\tthis.forEach(function (entry)\n\t\t{\n\t\t\tif (entry.value > maxCount)\n\t\t\t{\n\t\t\t\tmaxima = new Array();\n\t\t\t\tmaxima.push(entry.key);\n\t\t\t\tmaxCount = entry.value;\n\t\t\t}\n\t\t\telse if (entry.value == maxCount)\n\t\t\t{\n\t\t\t\tmaxima.push(entry.key);\n\t\t\t}\n\t\t});\n\treturn maxima;\n}\n\nIncidenceMap.prototype.get = function (index)\n{\n\tvar count = this._map.get(index);\n\tif (count == undefined)\n\t{\n\t\tcount = 0;\n\t}\n\t\n\treturn count;\n}\n\nIncidenceMap.prototype.set = function (indexName, newValue)\n{\n\tthis._map.set(indexName, newValue);\n\tthis.size = this._map.size;\n\treturn newValue;\n}\n\nIncidenceMap.prototype.contains = function (indexName)\n{\n\treturn this._map.contains(indexName);\n}\n\nIncidenceMap.prototype.forEach = function (f)\n{\n\tthis._map.forEach(f);\n}\n\nIncidenceMap.prototype.clone = function ()\n{\n\tvar emptyMap = new IncidenceMap();\n\tvar spawn = emptyMap.addMap(this._map.clone());\n\t\n\treturn spawn;\n}\n\nIncidenceMap.prototype.toString = function ()\n{\n\treturn this._map.toString();\n}\n\nmodule.exports = IncidenceMap;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9JbmNpZGVuY2VNYXAuanM/MWY1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqIEFCT1VUICoqKioqKlxuXG5JbmNpZGVuY2VNYXBcblxuXHRBdXRob3I6IFRvbSBMYW1iLCBMYW1ieXRlLmNvbVxuXHRDcmVhdGVkOiAyMDA3LjA4LjI3XG5cdFJlbGVhc2VkOiBcblx0RGVzY3JpcHRpb246IEFuIG9iamVjdCB3aGljaCBzdG9yZXMgdGhlIG51bWJlciBvZiB0aW1lcyB0aGF0IGEgdmFsdWUgaXMgZW5jb3VudGVyZWQuIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhpcyBhbmQgYSBwbGFpbiBtYXAgaXMgdGhhdCAuZ2V0KGluZGV4KSByZXR1cm5zIDAgd2hlbiBubyBlbnRyeSB3aXRoIHRoYXQga2V5IGV4aXN0cywgYW5kIHRoaXMgb2JqZWN0IGFkZHMgdGhlIC5pbmNyZW1lbnQoa2V5LCBbdGltZXNdKSBmdW5jdGlvbiB3aGljaCBpbmNyZW1lbnRzIHRoZSBjb3VudCBvZiB0aGUga2V5IHRoZSBnaXZlbiBudW1iZXIgb2YgdGltZXMsIG9yIG9uY2UgaWYgdGltZXMgaXMgdW5kZWZpbmVkLlxuXHRcblxuKioqKioqICoqKioqICoqKioqKi9cblxuLy90cnkgdXNpbmcgbmF0aXZlIE1hcFx0XG4vL2NvbnN0IE1hcCA9IHJlcXVpcmUoXCIuL01hcC5qc1wiKTtcblxuXG4vKioqKioqKiBDT05TVFJVQ1RPUiAqKioqKioqL1xuXG5mdW5jdGlvbiBJbmNpZGVuY2VNYXAgKClcbntcblx0dGhpcy5fbWFwID0gbmV3IE1hcCgpO1xuXHR0aGlzLnNpemUgPSAwO1xufVxuXG5cbi8qKioqKioqIFBST1BFUlRJRVMgKioqKioqKi9cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5fbWFwO1xuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5zaXplO1xuXG5cbi8qKioqKioqIE1FVEhPRFMgKioqKioqKi9cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5pbmNyZW1lbnQgPSBmdW5jdGlvbiAoa2V5LCB0aW1lcylcbntcblx0dGltZXMgPSAodGltZXMgPT0gdW5kZWZpbmVkKT8gMSA6IHRpbWVzO1xuXHR2YXIgY291bnQgPSB0aGlzLnNldChrZXksIHRoaXMuZ2V0KGtleSkrdGltZXMpO1xuXHRyZXR1cm4gY291bnQ7XG59XG5cbkluY2lkZW5jZU1hcC5wcm90b3R5cGUuYWRkTWFwID0gZnVuY3Rpb24gKGluY2lkZW5jZSlcbntcblx0dmFyIHJlc3VsdCA9IG5ldyBJbmNpZGVuY2VNYXAoKTtcblx0XG5cdGZ1bmN0aW9uIGNvdW50IChlbnRyeSlcblx0e1xuXHRcdHJlc3VsdC5pbmNyZW1lbnQoZW50cnkua2V5LCBlbnRyeS52YWx1ZSk7XG5cdH1cblx0XG5cdHRoaXMuZm9yRWFjaChjb3VudCk7XG5cdGluY2lkZW5jZS5mb3JFYWNoKGNvdW50KTtcblx0XG5cdHJldHVybiByZXN1bHQ7XG59XG5cbkluY2lkZW5jZU1hcC5wcm90b3R5cGUuZ2V0TWF4aW1hID0gZnVuY3Rpb24gKClcbntcblx0dmFyIG1heGltYSA9IG5ldyBBcnJheSgpO1xuXHR2YXIgbWF4Q291bnQgPSAwO1xuXHR0aGlzLmZvckVhY2goZnVuY3Rpb24gKGVudHJ5KVxuXHRcdHtcblx0XHRcdGlmIChlbnRyeS52YWx1ZSA+IG1heENvdW50KVxuXHRcdFx0e1xuXHRcdFx0XHRtYXhpbWEgPSBuZXcgQXJyYXkoKTtcblx0XHRcdFx0bWF4aW1hLnB1c2goZW50cnkua2V5KTtcblx0XHRcdFx0bWF4Q291bnQgPSBlbnRyeS52YWx1ZTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYgKGVudHJ5LnZhbHVlID09IG1heENvdW50KVxuXHRcdFx0e1xuXHRcdFx0XHRtYXhpbWEucHVzaChlbnRyeS5rZXkpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRyZXR1cm4gbWF4aW1hO1xufVxuXG5JbmNpZGVuY2VNYXAucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChpbmRleClcbntcblx0dmFyIGNvdW50ID0gdGhpcy5fbWFwLmdldChpbmRleCk7XG5cdGlmIChjb3VudCA9PSB1bmRlZmluZWQpXG5cdHtcblx0XHRjb3VudCA9IDA7XG5cdH1cblx0XG5cdHJldHVybiBjb3VudDtcbn1cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoaW5kZXhOYW1lLCBuZXdWYWx1ZSlcbntcblx0dGhpcy5fbWFwLnNldChpbmRleE5hbWUsIG5ld1ZhbHVlKTtcblx0dGhpcy5zaXplID0gdGhpcy5fbWFwLnNpemU7XG5cdHJldHVybiBuZXdWYWx1ZTtcbn1cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5jb250YWlucyA9IGZ1bmN0aW9uIChpbmRleE5hbWUpXG57XG5cdHJldHVybiB0aGlzLl9tYXAuY29udGFpbnMoaW5kZXhOYW1lKTtcbn1cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gKGYpXG57XG5cdHRoaXMuX21hcC5mb3JFYWNoKGYpO1xufVxuXG5JbmNpZGVuY2VNYXAucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKClcbntcblx0dmFyIGVtcHR5TWFwID0gbmV3IEluY2lkZW5jZU1hcCgpO1xuXHR2YXIgc3Bhd24gPSBlbXB0eU1hcC5hZGRNYXAodGhpcy5fbWFwLmNsb25lKCkpO1xuXHRcblx0cmV0dXJuIHNwYXduO1xufVxuXG5JbmNpZGVuY2VNYXAucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKClcbntcblx0cmV0dXJuIHRoaXMuX21hcC50b1N0cmluZygpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEluY2lkZW5jZU1hcDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vc3RhdGUtbGVhcm5lci9JbmNpZGVuY2VNYXAuanNcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

eval("/****** ABOUT ******\n\nPredictionData\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.02\n\tReleased: \n\tDescription: An object specifying all the properties of a prediction.\n\t\n\n****** ***** ******/\n\t\n\n/******** CONSTRUCTOR ********/\n\nfunction PredictionData (matchLength, states) \n{\n\tthis.matchLength = matchLength;\n\tthis.states = states || new Array();\n}\n\n\n/******** PROPERTIES ********/\n\n//The longest history match that led to this prediction.\nPredictionData.prototype.matchLength;\n//The predicted state (or states, in which case this is an array of states)\nPredictionData.prototype.states;\n\n\n/******** METHODS ********/\n\nPredictionData.prototype.getIsValid = function ()\n{\n\treturn (this.matchLength != undefined);\n}\n\nmodule.exports = PredictionData;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9QcmVkaWN0aW9uRGF0YS5qcz9kNGQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiogQUJPVVQgKioqKioqXG5cblByZWRpY3Rpb25EYXRhXG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNy4wOC4wMlxuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBbiBvYmplY3Qgc3BlY2lmeWluZyBhbGwgdGhlIHByb3BlcnRpZXMgb2YgYSBwcmVkaWN0aW9uLlxuXHRcblxuKioqKioqICoqKioqICoqKioqKi9cblx0XG5cbi8qKioqKioqKiBDT05TVFJVQ1RPUiAqKioqKioqKi9cblxuZnVuY3Rpb24gUHJlZGljdGlvbkRhdGEgKG1hdGNoTGVuZ3RoLCBzdGF0ZXMpIFxue1xuXHR0aGlzLm1hdGNoTGVuZ3RoID0gbWF0Y2hMZW5ndGg7XG5cdHRoaXMuc3RhdGVzID0gc3RhdGVzIHx8IG5ldyBBcnJheSgpO1xufVxuXG5cbi8qKioqKioqKiBQUk9QRVJUSUVTICoqKioqKioqL1xuXG4vL1RoZSBsb25nZXN0IGhpc3RvcnkgbWF0Y2ggdGhhdCBsZWQgdG8gdGhpcyBwcmVkaWN0aW9uLlxuUHJlZGljdGlvbkRhdGEucHJvdG90eXBlLm1hdGNoTGVuZ3RoO1xuLy9UaGUgcHJlZGljdGVkIHN0YXRlIChvciBzdGF0ZXMsIGluIHdoaWNoIGNhc2UgdGhpcyBpcyBhbiBhcnJheSBvZiBzdGF0ZXMpXG5QcmVkaWN0aW9uRGF0YS5wcm90b3R5cGUuc3RhdGVzO1xuXG5cbi8qKioqKioqKiBNRVRIT0RTICoqKioqKioqL1xuXG5QcmVkaWN0aW9uRGF0YS5wcm90b3R5cGUuZ2V0SXNWYWxpZCA9IGZ1bmN0aW9uICgpXG57XG5cdHJldHVybiAodGhpcy5tYXRjaExlbmd0aCAhPSB1bmRlZmluZWQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByZWRpY3Rpb25EYXRhO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9zdGF0ZS1sZWFybmVyL1ByZWRpY3Rpb25EYXRhLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

eval("/****** ABOUT ******\n\nStateLine\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.25\n\tReleased: \n\tDescription: An object that stores a sequence of states and can return the incidence of which states follow given state sequences.\n\t\n\t\n\n****** ***** ******/\n\nconst ArrayMap = __webpack_require__(0);\nconst IncidenceMap = __webpack_require__(6);\n\n\n/******** CONSTRUCTOR ********/\n\nfunction StateLine ()\n{\n\tthis.history = new Array();\n\tthis._ledger = new ArrayMap();\n}\n\n\n/******** PROPERTIES ********/\n\n//Structure of history: history[n] = input of the nth turn*/\nStateLine.prototype.history;\n//Structure of ledger: ledger.get(history fragment) => incidence.get(state N) = number of times that state N occurs after the given \"history fragment\"\nStateLine.prototype._ledger;\n\n\n/******** METHODS ********/\n\nStateLine.prototype.add = function (state)\n{\n\tvar historyFragment = this.history.slice(0);\n\t\n\twhile (true)\n\t{\n\t\t//increment the incidence count for the number of times that \"historyFragment\" has preceded \"state\"\n\t\tvar incidence = this._ledger.get(historyFragment);\n\t\t\n\t\tif (incidence == undefined)\n\t\t{\n\t\t\t//this history fragment has not occurred yet, so create a new incidence map\n\t\t\tvar newIncidence = new IncidenceMap();\n\t\t\tnewIncidence.set(state, 1);\n\t\t\t//NOTE: We have to clone historyFragment, because we are creating a new entry in the map. If it were left uncloned, we might modify the array being used for the purposes of this loop, and at the same time modify the array being used as an index in the map.\n\t\t\tthis._ledger.set(historyFragment.slice(0), newIncidence);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tincidence.increment(state);\n\t\t\t//incidence is an object, and therefore a reference, so we don't need to call ledger.set(historyFragment, incidence)\n\t\t}\n\t\t\n\t\tif (historyFragment.length == 0)\n\t\t{\n\t\t\tthis.history.push(state);\n\t\t\treturn;\n\t\t}\n\t\thistoryFragment.shift();\n\t}\n\t\n}\n\nStateLine.prototype.incidenceFollowing = function (sequence)\n{\n\t//NOTE: sequence should be an array\n\tvar incidence = this._ledger.get(sequence);\n\tif (incidence == undefined)\n\t{\n\t\treturn new IncidenceMap();\n\t}\n\telse\n\t{\n\t\treturn incidence;\n\t}\n}\n\nmodule.exports = StateLine;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9TdGF0ZUxpbmUuanM/ZmYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqIEFCT1VUICoqKioqKlxuXG5TdGF0ZUxpbmVcblxuXHRBdXRob3I6IFRvbSBMYW1iLCBMYW1ieXRlLmNvbVxuXHRDcmVhdGVkOiAyMDA3LjA4LjI1XG5cdFJlbGVhc2VkOiBcblx0RGVzY3JpcHRpb246IEFuIG9iamVjdCB0aGF0IHN0b3JlcyBhIHNlcXVlbmNlIG9mIHN0YXRlcyBhbmQgY2FuIHJldHVybiB0aGUgaW5jaWRlbmNlIG9mIHdoaWNoIHN0YXRlcyBmb2xsb3cgZ2l2ZW4gc3RhdGUgc2VxdWVuY2VzLlxuXHRcblx0XG5cbioqKioqKiAqKioqKiAqKioqKiovXG5cbmNvbnN0IEFycmF5TWFwID0gcmVxdWlyZShcIi4vQXJyYXlNYXAuanNcIik7XG5jb25zdCBJbmNpZGVuY2VNYXAgPSByZXF1aXJlKFwiLi9JbmNpZGVuY2VNYXAuanNcIik7XG5cblxuLyoqKioqKioqIENPTlNUUlVDVE9SICoqKioqKioqL1xuXG5mdW5jdGlvbiBTdGF0ZUxpbmUgKClcbntcblx0dGhpcy5oaXN0b3J5ID0gbmV3IEFycmF5KCk7XG5cdHRoaXMuX2xlZGdlciA9IG5ldyBBcnJheU1hcCgpO1xufVxuXG5cbi8qKioqKioqKiBQUk9QRVJUSUVTICoqKioqKioqL1xuXG4vL1N0cnVjdHVyZSBvZiBoaXN0b3J5OiBoaXN0b3J5W25dID0gaW5wdXQgb2YgdGhlIG50aCB0dXJuKi9cblN0YXRlTGluZS5wcm90b3R5cGUuaGlzdG9yeTtcbi8vU3RydWN0dXJlIG9mIGxlZGdlcjogbGVkZ2VyLmdldChoaXN0b3J5IGZyYWdtZW50KSA9PiBpbmNpZGVuY2UuZ2V0KHN0YXRlIE4pID0gbnVtYmVyIG9mIHRpbWVzIHRoYXQgc3RhdGUgTiBvY2N1cnMgYWZ0ZXIgdGhlIGdpdmVuIFwiaGlzdG9yeSBmcmFnbWVudFwiXG5TdGF0ZUxpbmUucHJvdG90eXBlLl9sZWRnZXI7XG5cblxuLyoqKioqKioqIE1FVEhPRFMgKioqKioqKiovXG5cblN0YXRlTGluZS5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKHN0YXRlKVxue1xuXHR2YXIgaGlzdG9yeUZyYWdtZW50ID0gdGhpcy5oaXN0b3J5LnNsaWNlKDApO1xuXHRcblx0d2hpbGUgKHRydWUpXG5cdHtcblx0XHQvL2luY3JlbWVudCB0aGUgaW5jaWRlbmNlIGNvdW50IGZvciB0aGUgbnVtYmVyIG9mIHRpbWVzIHRoYXQgXCJoaXN0b3J5RnJhZ21lbnRcIiBoYXMgcHJlY2VkZWQgXCJzdGF0ZVwiXG5cdFx0dmFyIGluY2lkZW5jZSA9IHRoaXMuX2xlZGdlci5nZXQoaGlzdG9yeUZyYWdtZW50KTtcblx0XHRcblx0XHRpZiAoaW5jaWRlbmNlID09IHVuZGVmaW5lZClcblx0XHR7XG5cdFx0XHQvL3RoaXMgaGlzdG9yeSBmcmFnbWVudCBoYXMgbm90IG9jY3VycmVkIHlldCwgc28gY3JlYXRlIGEgbmV3IGluY2lkZW5jZSBtYXBcblx0XHRcdHZhciBuZXdJbmNpZGVuY2UgPSBuZXcgSW5jaWRlbmNlTWFwKCk7XG5cdFx0XHRuZXdJbmNpZGVuY2Uuc2V0KHN0YXRlLCAxKTtcblx0XHRcdC8vTk9URTogV2UgaGF2ZSB0byBjbG9uZSBoaXN0b3J5RnJhZ21lbnQsIGJlY2F1c2Ugd2UgYXJlIGNyZWF0aW5nIGEgbmV3IGVudHJ5IGluIHRoZSBtYXAuIElmIGl0IHdlcmUgbGVmdCB1bmNsb25lZCwgd2UgbWlnaHQgbW9kaWZ5IHRoZSBhcnJheSBiZWluZyB1c2VkIGZvciB0aGUgcHVycG9zZXMgb2YgdGhpcyBsb29wLCBhbmQgYXQgdGhlIHNhbWUgdGltZSBtb2RpZnkgdGhlIGFycmF5IGJlaW5nIHVzZWQgYXMgYW4gaW5kZXggaW4gdGhlIG1hcC5cblx0XHRcdHRoaXMuX2xlZGdlci5zZXQoaGlzdG9yeUZyYWdtZW50LnNsaWNlKDApLCBuZXdJbmNpZGVuY2UpO1xuXHRcdH1cblx0XHRlbHNlXG5cdFx0e1xuXHRcdFx0aW5jaWRlbmNlLmluY3JlbWVudChzdGF0ZSk7XG5cdFx0XHQvL2luY2lkZW5jZSBpcyBhbiBvYmplY3QsIGFuZCB0aGVyZWZvcmUgYSByZWZlcmVuY2UsIHNvIHdlIGRvbid0IG5lZWQgdG8gY2FsbCBsZWRnZXIuc2V0KGhpc3RvcnlGcmFnbWVudCwgaW5jaWRlbmNlKVxuXHRcdH1cblx0XHRcblx0XHRpZiAoaGlzdG9yeUZyYWdtZW50Lmxlbmd0aCA9PSAwKVxuXHRcdHtcblx0XHRcdHRoaXMuaGlzdG9yeS5wdXNoKHN0YXRlKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0aGlzdG9yeUZyYWdtZW50LnNoaWZ0KCk7XG5cdH1cblx0XG59XG5cblN0YXRlTGluZS5wcm90b3R5cGUuaW5jaWRlbmNlRm9sbG93aW5nID0gZnVuY3Rpb24gKHNlcXVlbmNlKVxue1xuXHQvL05PVEU6IHNlcXVlbmNlIHNob3VsZCBiZSBhbiBhcnJheVxuXHR2YXIgaW5jaWRlbmNlID0gdGhpcy5fbGVkZ2VyLmdldChzZXF1ZW5jZSk7XG5cdGlmIChpbmNpZGVuY2UgPT0gdW5kZWZpbmVkKVxuXHR7XG5cdFx0cmV0dXJuIG5ldyBJbmNpZGVuY2VNYXAoKTtcblx0fVxuXHRlbHNlXG5cdHtcblx0XHRyZXR1cm4gaW5jaWRlbmNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU3RhdGVMaW5lO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9zdGF0ZS1sZWFybmVyL1N0YXRlTGluZS5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })
/******/ ]);