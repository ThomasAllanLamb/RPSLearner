/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("/****** ABOUT ******\n\nArrayMap\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.19\n\tReleased: \n\tDescription: A map that only takes arrays, but stores them more efficiently than a linear map.\n\t\n\n****** ***** ******/\n\t\nconst Entry = __webpack_require__(6);\n//try using native Map\n//const Map = require(\"./Map.js\");\n\n/******** CONSTRUCTOR ********/\n\nfunction ArrayMap () \n{\n\t//UNF: clone elements? If a person messes with the elements of an array they set to have a value, then discard it and make a fresh one, they will expect .get to return the same value. But since they messed with elements of the array before they got rid of it, the elements of the nodes in this map will have changes and the value the user is looking for will no longer have the same key.\n\tthis._choices = new Map();\n\tthis.size = 0;\n}\n\n\n/******** PROPERTIES ********/\n\n//UNF: recalculate .size at the end of .set\nArrayMap.prototype.size;\n//the next \nArrayMap.prototype._choices;\n//the answer to .get( [] )\nArrayMap.prototype._nodeValue;\nArrayMap.prototype._isOccupied;\n\n\n/******** METHODS ********/\n\nArrayMap.prototype.get = function (key, keyIndex)\n{\n\tkeyIndex = keyIndex || 0;\n\tif (keyIndex == key.length)\n\t{\n\t\treturn this._nodeValue;\n\t}\n\telse\n\t{\n\t\tvar currentElement = key[keyIndex];\n\t\tif (this._choices.has(currentElement))\n\t\t{\n\t\t\tvar nextNode = this._choices.get(currentElement);\n\t\t\tvar nextGet = nextNode.get(key, keyIndex+1);\n\t\t\treturn nextGet;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nArrayMap.prototype.set = function (key, value, keyIndex)\n{\n\tkeyIndex = keyIndex || 0;\n\t\n\tif (keyIndex == key.length)\n\t{\n\t\tthis._nodeValue = value;\n\t\tthis._isOccupied = true;\n\t\tthis._calculateSize();\n\t\treturn value;\n\t}\n\telse\n\t{\n\t\tvar currentElement = key[keyIndex];\n\t\tif (this._choices.has(currentElement))\n\t\t{\n\t\t\tvar nextNode = this._choices.get(currentElement);\n\t\t\t\n\t\t\tnextNode.set(key, value, keyIndex+1);\n\t\t\t\n\t\t\tthis._calculateSize();\n\t\t\t\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar nextNode = new ArrayMap();\n\t\t\tnextNode.set(key, value, keyIndex+1);\n\t\t\t\n\t\t\tvar currentElement = key[keyIndex];\n\t\t\tthis._choices.set(currentElement, nextNode);\n\t\t\tthis._calculateSize();\n\t\t\t\n\t\t\treturn value;\n\t\t}\n\t}\n\t\n}\n\nArrayMap.prototype.has = function (key, keyIndex)\n{\n\tkeyIndex = keyIndex || 0;\n\t\n\tif (keyIndex == key.length)\n\t{\n\t\treturn (this._isOccupied);\n\t}\n\telse\n\t{\n\t\tvar currentElement = key[keyIndex];\n\t\tif (this._choices.has(currentElement))\n\t\t{\n\t\t\tvar nextNode = this._choices.get(currentElement);\n\t\t\treturn nextNode.has(key, keyIndex+1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\n/* IE 6 does not support __defineGetter__\nMap.prototype.__defineGetter__(\"size\", function () \n{\n\treturn this._data.length;\n});*/\n\nArrayMap.prototype.forEach = function (f, baseKey)\n{\n\tbaseKey = baseKey || new Array();\n\tif (this._isOccupied)\n\t{\n\t\tvar entry = new Entry(baseKey, this._nodeValue);\n\t\tvar result = f(entry);\n\t\tif (result != undefined)\n\t\t{\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\tif (this._choices.size > 0)\n\t{\n\t\t//!!!inefficient conversion of  to native style\n\t\tthis._choices.forEach(function (value, key, map)\n\t\t\t{\n\t\t\t\tbaseKey.push(entry.key);\n\t\t\t\tvar result = entry.value.forEach(f, baseKey);\n\t\t\t\tif (result != undefined)\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tbaseKey.pop();\n\t\t\t});\n\t\t\n\t}\n\treturn undefined;\n}\n\nArrayMap.prototype.clone = function ()\n{\n\t//Diag.trace(\"ArrayMap.clone():\");\n\t//Diag.trace(\"this = \"+this);\n\tvar spawn = new ArrayMap();\n\tthis.forEach(function (entry)\n\t\t{\n\t\t\tspawn.set(entry.key.clone(), entry.value.clone());\n\t\t});\n\t//Diag.trace(\"spawn = \"+spawn);\n\t\n\treturn spawn;\n}\n\nArrayMap.prototype.toString = function ()\n{\n\tvar result = \"{\\n\";\n\tthis.forEach(function (entry)\n\t\t{\n\t\t\tresult += \"\\t\"+entry+\"\\n\";\n\t\t});\n\tresult += \"}\";\n\treturn result;\n}\n\n/*** Private ***/\n\nArrayMap.prototype._looksLike = function (a, b)\n{\n\tif (a == b)\n\t{\n\t\t////Diag.trace(\"Return true: both are primitively equal\");\n\t\treturn true;\n\t}\n\telse if (a instanceof Object && b instanceof Object)\n\t{\n\t\tfor (var i in a)\n\t\t{\n\t\t\tif (!this._looksLike(a[i], b[i]))\n\t\t\t{\n\t\t\t\t////Diag.trace(\"Return false: both are objects, but property \"+i+\"not equal (\"+a[i]+\" != \"+b[i]+\")\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tfor (var i in b)\n\t\t{\n\t\t\t//because all properties of a exist and are equal in b, all it takes is for a property in b to not exist in a, and we know it will not be equal. Checking to see if it equals undefined instead of b[i] saves the access time of b[i].\n\t\t\tif (a[i] == undefined)\n\t\t\t{\n\t\t\t\t////Diag.trace(\"Return false: both are objects, but property \\\"\"+i+\"\\\" not equal (\"+a[i]+\" != \"+b[i]+\")\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t////Diag.trace(\"Return true: both are identical objects\");\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\t////Diag.trace(\"Return false: neither both primitive and equal nor both objects\");\n\t\treturn false;\n\t}\n}\n\nArrayMap.prototype._calculateSize = function ()\n{\n\tvar size = 0;\n\t\n\tif (this._isOccupied)\n\t{\n\t\tsize++;\n\t}\n\t\n\tthis._choices.forEach(function (key, value)\n\t\t{\n\t\t\tsize += value.size;\n\t\t});\n\t\n\tthis.size = size;\n}\n\nmodule.exports = ArrayMap;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9BcnJheU1hcC5qcz8yZjNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiogQUJPVVQgKioqKioqXG5cbkFycmF5TWFwXG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNy4wOC4xOVxuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBIG1hcCB0aGF0IG9ubHkgdGFrZXMgYXJyYXlzLCBidXQgc3RvcmVzIHRoZW0gbW9yZSBlZmZpY2llbnRseSB0aGFuIGEgbGluZWFyIG1hcC5cblx0XG5cbioqKioqKiAqKioqKiAqKioqKiovXG5cdFxuY29uc3QgRW50cnkgPSByZXF1aXJlKFwiLi9FbnRyeS5qc1wiKTtcbi8vdHJ5IHVzaW5nIG5hdGl2ZSBNYXBcbi8vY29uc3QgTWFwID0gcmVxdWlyZShcIi4vTWFwLmpzXCIpO1xuXG4vKioqKioqKiogQ09OU1RSVUNUT1IgKioqKioqKiovXG5cbmZ1bmN0aW9uIEFycmF5TWFwICgpIFxue1xuXHQvL1VORjogY2xvbmUgZWxlbWVudHM/IElmIGEgcGVyc29uIG1lc3NlcyB3aXRoIHRoZSBlbGVtZW50cyBvZiBhbiBhcnJheSB0aGV5IHNldCB0byBoYXZlIGEgdmFsdWUsIHRoZW4gZGlzY2FyZCBpdCBhbmQgbWFrZSBhIGZyZXNoIG9uZSwgdGhleSB3aWxsIGV4cGVjdCAuZ2V0IHRvIHJldHVybiB0aGUgc2FtZSB2YWx1ZS4gQnV0IHNpbmNlIHRoZXkgbWVzc2VkIHdpdGggZWxlbWVudHMgb2YgdGhlIGFycmF5IGJlZm9yZSB0aGV5IGdvdCByaWQgb2YgaXQsIHRoZSBlbGVtZW50cyBvZiB0aGUgbm9kZXMgaW4gdGhpcyBtYXAgd2lsbCBoYXZlIGNoYW5nZXMgYW5kIHRoZSB2YWx1ZSB0aGUgdXNlciBpcyBsb29raW5nIGZvciB3aWxsIG5vIGxvbmdlciBoYXZlIHRoZSBzYW1lIGtleS5cblx0dGhpcy5fY2hvaWNlcyA9IG5ldyBNYXAoKTtcblx0dGhpcy5zaXplID0gMDtcbn1cblxuXG4vKioqKioqKiogUFJPUEVSVElFUyAqKioqKioqKi9cblxuLy9VTkY6IHJlY2FsY3VsYXRlIC5zaXplIGF0IHRoZSBlbmQgb2YgLnNldFxuQXJyYXlNYXAucHJvdG90eXBlLnNpemU7XG4vL3RoZSBuZXh0IFxuQXJyYXlNYXAucHJvdG90eXBlLl9jaG9pY2VzO1xuLy90aGUgYW5zd2VyIHRvIC5nZXQoIFtdIClcbkFycmF5TWFwLnByb3RvdHlwZS5fbm9kZVZhbHVlO1xuQXJyYXlNYXAucHJvdG90eXBlLl9pc09jY3VwaWVkO1xuXG5cbi8qKioqKioqKiBNRVRIT0RTICoqKioqKioqL1xuXG5BcnJheU1hcC5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGtleSwga2V5SW5kZXgpXG57XG5cdGtleUluZGV4ID0ga2V5SW5kZXggfHwgMDtcblx0aWYgKGtleUluZGV4ID09IGtleS5sZW5ndGgpXG5cdHtcblx0XHRyZXR1cm4gdGhpcy5fbm9kZVZhbHVlO1xuXHR9XG5cdGVsc2Vcblx0e1xuXHRcdHZhciBjdXJyZW50RWxlbWVudCA9IGtleVtrZXlJbmRleF07XG5cdFx0aWYgKHRoaXMuX2Nob2ljZXMuaGFzKGN1cnJlbnRFbGVtZW50KSlcblx0XHR7XG5cdFx0XHR2YXIgbmV4dE5vZGUgPSB0aGlzLl9jaG9pY2VzLmdldChjdXJyZW50RWxlbWVudCk7XG5cdFx0XHR2YXIgbmV4dEdldCA9IG5leHROb2RlLmdldChrZXksIGtleUluZGV4KzEpO1xuXHRcdFx0cmV0dXJuIG5leHRHZXQ7XG5cdFx0fVxuXHRcdGVsc2Vcblx0XHR7XG5cdFx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxufVxuXG5BcnJheU1hcC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUsIGtleUluZGV4KVxue1xuXHRrZXlJbmRleCA9IGtleUluZGV4IHx8IDA7XG5cdFxuXHRpZiAoa2V5SW5kZXggPT0ga2V5Lmxlbmd0aClcblx0e1xuXHRcdHRoaXMuX25vZGVWYWx1ZSA9IHZhbHVlO1xuXHRcdHRoaXMuX2lzT2NjdXBpZWQgPSB0cnVlO1xuXHRcdHRoaXMuX2NhbGN1bGF0ZVNpemUoKTtcblx0XHRyZXR1cm4gdmFsdWU7XG5cdH1cblx0ZWxzZVxuXHR7XG5cdFx0dmFyIGN1cnJlbnRFbGVtZW50ID0ga2V5W2tleUluZGV4XTtcblx0XHRpZiAodGhpcy5fY2hvaWNlcy5oYXMoY3VycmVudEVsZW1lbnQpKVxuXHRcdHtcblx0XHRcdHZhciBuZXh0Tm9kZSA9IHRoaXMuX2Nob2ljZXMuZ2V0KGN1cnJlbnRFbGVtZW50KTtcblx0XHRcdFxuXHRcdFx0bmV4dE5vZGUuc2V0KGtleSwgdmFsdWUsIGtleUluZGV4KzEpO1xuXHRcdFx0XG5cdFx0XHR0aGlzLl9jYWxjdWxhdGVTaXplKCk7XG5cdFx0XHRcblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cdFx0ZWxzZVxuXHRcdHtcblx0XHRcdHZhciBuZXh0Tm9kZSA9IG5ldyBBcnJheU1hcCgpO1xuXHRcdFx0bmV4dE5vZGUuc2V0KGtleSwgdmFsdWUsIGtleUluZGV4KzEpO1xuXHRcdFx0XG5cdFx0XHR2YXIgY3VycmVudEVsZW1lbnQgPSBrZXlba2V5SW5kZXhdO1xuXHRcdFx0dGhpcy5fY2hvaWNlcy5zZXQoY3VycmVudEVsZW1lbnQsIG5leHROb2RlKTtcblx0XHRcdHRoaXMuX2NhbGN1bGF0ZVNpemUoKTtcblx0XHRcdFxuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblx0fVxuXHRcbn1cblxuQXJyYXlNYXAucHJvdG90eXBlLmhhcyA9IGZ1bmN0aW9uIChrZXksIGtleUluZGV4KVxue1xuXHRrZXlJbmRleCA9IGtleUluZGV4IHx8IDA7XG5cdFxuXHRpZiAoa2V5SW5kZXggPT0ga2V5Lmxlbmd0aClcblx0e1xuXHRcdHJldHVybiAodGhpcy5faXNPY2N1cGllZCk7XG5cdH1cblx0ZWxzZVxuXHR7XG5cdFx0dmFyIGN1cnJlbnRFbGVtZW50ID0ga2V5W2tleUluZGV4XTtcblx0XHRpZiAodGhpcy5fY2hvaWNlcy5oYXMoY3VycmVudEVsZW1lbnQpKVxuXHRcdHtcblx0XHRcdHZhciBuZXh0Tm9kZSA9IHRoaXMuX2Nob2ljZXMuZ2V0KGN1cnJlbnRFbGVtZW50KTtcblx0XHRcdHJldHVybiBuZXh0Tm9kZS5oYXMoa2V5LCBrZXlJbmRleCsxKTtcblx0XHR9XG5cdFx0ZWxzZVxuXHRcdHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdH1cbn1cblxuLyogSUUgNiBkb2VzIG5vdCBzdXBwb3J0IF9fZGVmaW5lR2V0dGVyX19cbk1hcC5wcm90b3R5cGUuX19kZWZpbmVHZXR0ZXJfXyhcInNpemVcIiwgZnVuY3Rpb24gKCkgXG57XG5cdHJldHVybiB0aGlzLl9kYXRhLmxlbmd0aDtcbn0pOyovXG5cbkFycmF5TWFwLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gKGYsIGJhc2VLZXkpXG57XG5cdGJhc2VLZXkgPSBiYXNlS2V5IHx8IG5ldyBBcnJheSgpO1xuXHRpZiAodGhpcy5faXNPY2N1cGllZClcblx0e1xuXHRcdHZhciBlbnRyeSA9IG5ldyBFbnRyeShiYXNlS2V5LCB0aGlzLl9ub2RlVmFsdWUpO1xuXHRcdHZhciByZXN1bHQgPSBmKGVudHJ5KTtcblx0XHRpZiAocmVzdWx0ICE9IHVuZGVmaW5lZClcblx0XHR7XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXHRcblx0aWYgKHRoaXMuX2Nob2ljZXMuc2l6ZSA+IDApXG5cdHtcblx0XHQvLyEhIWluZWZmaWNpZW50IGNvbnZlcnNpb24gb2YgIHRvIG5hdGl2ZSBzdHlsZVxuXHRcdHRoaXMuX2Nob2ljZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGtleSwgbWFwKVxuXHRcdFx0e1xuXHRcdFx0XHRiYXNlS2V5LnB1c2goZW50cnkua2V5KTtcblx0XHRcdFx0dmFyIHJlc3VsdCA9IGVudHJ5LnZhbHVlLmZvckVhY2goZiwgYmFzZUtleSk7XG5cdFx0XHRcdGlmIChyZXN1bHQgIT0gdW5kZWZpbmVkKVxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdFx0fVxuXHRcdFx0XHRiYXNlS2V5LnBvcCgpO1xuXHRcdFx0fSk7XG5cdFx0XG5cdH1cblx0cmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuQXJyYXlNYXAucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKClcbntcblx0Ly9EaWFnLnRyYWNlKFwiQXJyYXlNYXAuY2xvbmUoKTpcIik7XG5cdC8vRGlhZy50cmFjZShcInRoaXMgPSBcIit0aGlzKTtcblx0dmFyIHNwYXduID0gbmV3IEFycmF5TWFwKCk7XG5cdHRoaXMuZm9yRWFjaChmdW5jdGlvbiAoZW50cnkpXG5cdFx0e1xuXHRcdFx0c3Bhd24uc2V0KGVudHJ5LmtleS5jbG9uZSgpLCBlbnRyeS52YWx1ZS5jbG9uZSgpKTtcblx0XHR9KTtcblx0Ly9EaWFnLnRyYWNlKFwic3Bhd24gPSBcIitzcGF3bik7XG5cdFxuXHRyZXR1cm4gc3Bhd247XG59XG5cbkFycmF5TWFwLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpXG57XG5cdHZhciByZXN1bHQgPSBcIntcXG5cIjtcblx0dGhpcy5mb3JFYWNoKGZ1bmN0aW9uIChlbnRyeSlcblx0XHR7XG5cdFx0XHRyZXN1bHQgKz0gXCJcXHRcIitlbnRyeStcIlxcblwiO1xuXHRcdH0pO1xuXHRyZXN1bHQgKz0gXCJ9XCI7XG5cdHJldHVybiByZXN1bHQ7XG59XG5cbi8qKiogUHJpdmF0ZSAqKiovXG5cbkFycmF5TWFwLnByb3RvdHlwZS5fbG9va3NMaWtlID0gZnVuY3Rpb24gKGEsIGIpXG57XG5cdGlmIChhID09IGIpXG5cdHtcblx0XHQvLy8vRGlhZy50cmFjZShcIlJldHVybiB0cnVlOiBib3RoIGFyZSBwcmltaXRpdmVseSBlcXVhbFwiKTtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXHRlbHNlIGlmIChhIGluc3RhbmNlb2YgT2JqZWN0ICYmIGIgaW5zdGFuY2VvZiBPYmplY3QpXG5cdHtcblx0XHRmb3IgKHZhciBpIGluIGEpXG5cdFx0e1xuXHRcdFx0aWYgKCF0aGlzLl9sb29rc0xpa2UoYVtpXSwgYltpXSkpXG5cdFx0XHR7XG5cdFx0XHRcdC8vLy9EaWFnLnRyYWNlKFwiUmV0dXJuIGZhbHNlOiBib3RoIGFyZSBvYmplY3RzLCBidXQgcHJvcGVydHkgXCIraStcIm5vdCBlcXVhbCAoXCIrYVtpXStcIiAhPSBcIitiW2ldK1wiKVwiKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRmb3IgKHZhciBpIGluIGIpXG5cdFx0e1xuXHRcdFx0Ly9iZWNhdXNlIGFsbCBwcm9wZXJ0aWVzIG9mIGEgZXhpc3QgYW5kIGFyZSBlcXVhbCBpbiBiLCBhbGwgaXQgdGFrZXMgaXMgZm9yIGEgcHJvcGVydHkgaW4gYiB0byBub3QgZXhpc3QgaW4gYSwgYW5kIHdlIGtub3cgaXQgd2lsbCBub3QgYmUgZXF1YWwuIENoZWNraW5nIHRvIHNlZSBpZiBpdCBlcXVhbHMgdW5kZWZpbmVkIGluc3RlYWQgb2YgYltpXSBzYXZlcyB0aGUgYWNjZXNzIHRpbWUgb2YgYltpXS5cblx0XHRcdGlmIChhW2ldID09IHVuZGVmaW5lZClcblx0XHRcdHtcblx0XHRcdFx0Ly8vL0RpYWcudHJhY2UoXCJSZXR1cm4gZmFsc2U6IGJvdGggYXJlIG9iamVjdHMsIGJ1dCBwcm9wZXJ0eSBcXFwiXCIraStcIlxcXCIgbm90IGVxdWFsIChcIithW2ldK1wiICE9IFwiK2JbaV0rXCIpXCIpO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdC8vLy9EaWFnLnRyYWNlKFwiUmV0dXJuIHRydWU6IGJvdGggYXJlIGlkZW50aWNhbCBvYmplY3RzXCIpO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cdGVsc2Vcblx0e1xuXHRcdC8vLy9EaWFnLnRyYWNlKFwiUmV0dXJuIGZhbHNlOiBuZWl0aGVyIGJvdGggcHJpbWl0aXZlIGFuZCBlcXVhbCBub3IgYm90aCBvYmplY3RzXCIpO1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5BcnJheU1hcC5wcm90b3R5cGUuX2NhbGN1bGF0ZVNpemUgPSBmdW5jdGlvbiAoKVxue1xuXHR2YXIgc2l6ZSA9IDA7XG5cdFxuXHRpZiAodGhpcy5faXNPY2N1cGllZClcblx0e1xuXHRcdHNpemUrKztcblx0fVxuXHRcblx0dGhpcy5fY2hvaWNlcy5mb3JFYWNoKGZ1bmN0aW9uIChrZXksIHZhbHVlKVxuXHRcdHtcblx0XHRcdHNpemUgKz0gdmFsdWUuc2l6ZTtcblx0XHR9KTtcblx0XG5cdHRoaXMuc2l6ZSA9IHNpemU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXJyYXlNYXA7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N0YXRlLWxlYXJuZXIvQXJyYXlNYXAuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

eval("const StateLearner = __webpack_require__(9);\nconst TEMPLATE = __webpack_require__(5);\nconst STYLE = __webpack_require__(11);\n/* ???: 2017.05.29: Discovered comments said that these were used directly, but I can't see how. Possibly was originally intended as \"types that are intantiated by other classes, but used here\"? The PredictionData type is returned and by one of the methods used by this class (stateLearner.makePrediction).\nconst PredictionData = require(\"PredictionData.js\");\n//const IncidenceMap = require(\"IncidenceMap.js\");\nconst ArrayMap = require(\"ArrayMap.js\");\n*/\n\n//???: is there a new way of doing enumerations in ECMAScript? Should I use it here? \n//faux enumeration\nconst ROCK = \"R\";\nconst PAPER = \"P\";\nconst SCISSORS = \"S\";\nconst allStates = new Array(ROCK, PAPER, SCISSORS);\n\nfunction RPSLearner () {\n  this._rPSAI = new StateLearner();\n\n  //???: not sure if the root should be an element, or a collection of sibling elements, or what. Choosing single element for now, because that is simpler to implement\n  var dOMRoot = document.createElement(\"div\");\n  dOMRoot.innerHTML = TEMPLATE;\n\n  //references to commonly-used elements\n  this._dOMShorthand = {\n    selectRock: dOMRoot.querySelector(\"#selectRock\"),\n    selectPaper: dOMRoot.querySelector(\"#selectPaper\"),\n    selectScissors: dOMRoot.querySelector(\"#selectScissors\"),\n    rockGuess: dOMRoot.querySelector(\"#rockGuess\"),\n    paperGuess: dOMRoot.querySelector(\"#paperGuess\"),\n    scissorsGuess: dOMRoot.querySelector(\"#scissorsGuess\"),\n    tableBody: dOMRoot.querySelector(\"#tableBody\"),\n    guessVisible: dOMRoot.querySelector(\"#guessVisible\"),\n    recall: dOMRoot.querySelector(\"#recall\"),\n    aIAccuracy: dOMRoot.querySelector(\"#aIAccuracy\"),\n    aIGain: dOMRoot.querySelector(\"#aIGain\"),\n    normalizedGain: dOMRoot.querySelector(\"#normalizedGain\")\n  }\n\n  //???: how do you search within an element for an ID? For now, just search the entire document. This will break if the page has ID collisions.\n  const th = this;\n  this._dOMShorthand.selectRock.addEventListener(\"click\", function () {th._selectRock();});\n  this._dOMShorthand.selectPaper.addEventListener(\"click\", function () {th._selectPaper();});\n  this._dOMShorthand.selectScissors.addEventListener(\"click\", function () {th._selectScissors()});\n\n  \n  this._lastPrediction;\n  this._roundsPassed = 0;\n  this._aIWins = 0;\n  \n  //initialize\n  this._enforceRecall();\n  this._renewPrediction();\n  \n  this.dOMRoot = dOMRoot;\n}\n\nRPSLearner.prototype._enforcePredictionVisibility = function ()\n{\n  function setInsidesOfTo (node, displayStyle)\n  {\n    if (node.firstChild)\n    {\n      node.firstChild.style.display = displayStyle;\n    }\n  }\n  \n  if (!this._dOMShorthand.guessVisible.checked)\n  {\n    setInsidesOfTo(this._dOMShorthand.rockGuess, \"none\");\n    setInsidesOfTo(this._dOMShorthand.paperGuess, \"none\");\n    setInsidesOfTo(this._dOMShorthand.scissorsGuess, \"none\");\n  }\n  else\n  {\n    setInsidesOfTo(this._dOMShorthand.rockGuess, \"block\");\n    setInsidesOfTo(this._dOMShorthand.paperGuess, \"block\");\n    setInsidesOfTo(this._dOMShorthand.scissorsGuess, \"block\");\n  }\n}\n\nRPSLearner.prototype._enforceRecall = function ()\n{\n  var enteredRecall = Number(this._dOMShorthand.recall.value);\n  if (isNaN(enteredRecall))\n  {\n    //this will also catch misspellings of \"Infinity,\" like \"infinity,\" so we don't need to catch those specifically.\n    enteredRecall = Infinity;\n  }\n  else if (enteredRecall < 0)\n  {\n    enteredRecall = 0;\n  }\n  else\n  {\n    enteredRecall = Math.round(enteredRecall, 1);\n  }\n  \n  this._rPSAI.recall = enteredRecall;\n  this._dOMShorthand.recall.value = enteredRecall;\n}\n\nRPSLearner.prototype._getPredictionCellOf = function (state)\n{\n  var predictionCell;\n  if (state == ROCK)\n  {\n    predictionCell = this._dOMShorthand.rockGuess;\n  }\n  else if (state == PAPER)\n  {\n    predictionCell = this._dOMShorthand.paperGuess;\n  }\n  else if (state == SCISSORS)\n  {\n    predictionCell = this._dOMShorthand.scissorsGuess;\n  }\n  return predictionCell;\n}\n\nRPSLearner.prototype._selectRock = function ()\n{\n  this._rPSAI.append(ROCK);\n  this._addHistory(ROCK, this._lastPrediction);\n  this._renewPrediction();\n}\n\nRPSLearner.prototype._selectPaper = function ()\n{\n  this._rPSAI.append(PAPER);\n  this._addHistory(PAPER, this._lastPrediction);\n  this._renewPrediction();\n}\n\nRPSLearner.prototype._selectScissors = function ()\n{\n  this._rPSAI.append(SCISSORS);\n  this._addHistory(SCISSORS, this._lastPrediction);\n  this._renewPrediction();\n}\n\nRPSLearner.prototype._renewPrediction = function ()\n{\n  //clear old prediction\n  if (this._lastPrediction != undefined)\n  {\n    var oldPredictionCell = this._getPredictionCellOf(this._lastPrediction);\n    var oldPredictionSpan = oldPredictionCell.childNodes[0];\n    oldPredictionCell.removeChild(oldPredictionSpan);\n  }\n  \n  var predictionData = this._rPSAI.makePrediction();\n  if (predictionData === undefined)\n  {\n    //if predictionData.matchLength is undefined, that means that StateLearner was forced to make a prediction without any data.\n    var randomIndex = Math.round(Math.random()*(allStates.length-1));\n    var newPrediction = allStates[randomIndex];\n  }\n  else if (predictionData.states.length >= 2)\n  {\n    //if predictionData.state is an array of more than one element, it means that the contents of the array should be treated as a Set of states that were tied in match length\n    var randomIndex = Math.round(Math.random()*(predictionData.states.length-1));\n    var newPrediction = predictionData.states[randomIndex];\n  }\n  else\n  {\n    var newPrediction = predictionData.states[0];\n  }\n  \n  var predictionCell = this._getPredictionCellOf(newPrediction);\n  \n  var box = document.createElement(\"span\");\n  box.className = \"aISelect\";\n  predictionCell.appendChild(box);\n  \n  this._lastPrediction = newPrediction;\n  \n  this._enforcePredictionVisibility();\n}\n\nRPSLearner.prototype._addHistory = function (humanSelection, aISelection)\n{\n  var tableNode = this._dOMShorthand.tableBody;\n  var recentRow = tableNode.getElementsByTagName(\"tr\")[3];\n  //remove the text \"History:\" from recent row and replace it with the round number, because it is going to be shifted down.\n  var roundCell = recentRow.getElementsByTagName(\"td\")[0];\n  var roundText = roundCell.firstChild;\n  //it's roundsPassed-1 because we're labelling the row for the round that has just passed and is being pushed down.\n  roundText.data = this._roundsPassed+1;\n  \n  var newRow = document.createElement(\"tr\");\n  var historyCell = document.createElement(\"td\");\n  var historyText = document.createTextNode(\"History:\");\n  historyCell.appendChild(historyText);\n  newRow.appendChild(historyCell);\n  \n  var rockCell = document.createElement(\"td\");\n  var paperCell = document.createElement(\"td\");\n  var scissorsCell = document.createElement(\"td\");\n  \n  var cellOf = new Array();\n  cellOf[ROCK] = rockCell;\n  cellOf[PAPER] = paperCell;\n  cellOf[SCISSORS] = scissorsCell;\n  \n  if (humanSelection == aISelection)\n  {\n    var selectionNode = document.createElement(\"span\");\n    selectionNode.className = \"bothSelect\";\n    var selectionCell = cellOf[humanSelection];\n    selectionCell.appendChild(selectionNode);\n  }\n  else\n  {\n    var humanSelectionNode = document.createElement(\"span\");\n    humanSelectionNode.className = \"humanSelect\";\n    var humanSelectionCell = cellOf[humanSelection];\n    humanSelectionCell.appendChild(humanSelectionNode);\n    \n    if (aISelection != undefined)\n    {\n      \n      var aISelectionNode = document.createElement(\"span\");\n      aISelectionNode.className = \"aISelect\";\n      var aISelectionCell = cellOf[aISelection];\n      aISelectionCell.appendChild(aISelectionNode);\n    }\n  }\n  \n  newRow.appendChild(rockCell);\n  newRow.appendChild(paperCell);\n  newRow.appendChild(scissorsCell);\n  \n  tableNode.insertBefore(newRow, recentRow);\n  if (this._roundsPassed == 0)\n  {\n    //if this is the first round, then the previous round's row that just got pushed down will be the blank placeholder row that the page is initialized with, so delete it for aesthetics' sake.\n    tableNode.removeChild(recentRow);\n  }\n  \n  //update statistics\n  if (aISelection == humanSelection)\n  {\n    this._aIWins++;\n  }\n  \n  var newAccuracy = this._aIWins/(this._roundsPassed+1);\n  //*10000/100 is done to get an answer to 2 decimal places\n  var newAccuracyPercentage = (Math.round(newAccuracy*10000)/100);\n  this._dOMShorthand.aIAccuracy.innerHTML = newAccuracyPercentage+\"%\"\n  \n  var newGain = (newAccuracy-(1/allStates.length));\n  var newGainPercentage = Math.round(newGain*10000)/100;\n  this._dOMShorthand.aIGain.innerHTML = newGainPercentage+\"%\";\n  \n  var newNormalized = newGain/(1/3);\n  var newNormalizedPercentage = Math.round(newNormalized*10000)/100;\n  this._dOMShorthand.normalizedGain.innerHTML = newNormalizedPercentage+\"%\";\n  \n  this._roundsPassed++;\n}\n\nmodule.exports = RPSLearner;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

eval("const RPSLearner = __webpack_require__(1);\n\nwindow.onload = function () {\n  var rPSLearner = new RPSLearner();\n  document.body.appendChild(rPSLearner.dOMRoot);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NsaWVudC9hcHAuanM/MjdlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSUFNMZWFybmVyID0gcmVxdWlyZShcIi4vUlBTTGVhcm5lci5qc1wiKTtcblxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJQU0xlYXJuZXIgPSBuZXcgUlBTTGVhcm5lcigpO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHJQU0xlYXJuZXIuZE9NUm9vdCk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jbGllbnQvYXBwLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(4)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \"body {\\n  margin: 0px;\\n  padding: 0px;\\n  text-align: center;\\n  font-size: 16px;\\n}\\n#centeredBlock {\\n  width: 750px;\\n  text-align: left;\\n  margin: 0px auto;\\n}\\np {\\n  text-indent: 30px;\\n}\\n#rPSTable {\\n  float: left;\\n  margin-right: 40px;\\n  border-spacing: 3px;\\n}\\ntd {\\n  padding: 4px;\\n  height: 30px;\\n  text-align: center;\\n}\\n.indexColumn {\\n  width: 150px;\\n}\\n.stateColumn {\\n  width: 50px;\\n}\\n.button {\\n  background-color: #EEF5F5;\\n  border: solid 1px black;\\n  padding: 0px;\\n  -moz-border-radius: 7px;\\n  cursor: pointer;\\n  font-size: 25px;\\n}\\n.button:hover {\\n  background-color: #CFC;\\n}\\n.humanSelect,\\n.aISelect,\\n.bothSelect {\\n  display: block;\\n  margin: auto;\\n  width: 30px;\\n  height: 30px;\\n  text-align: center;\\n}\\n.humanSelect {\\n  opacity: 0.5;\\n  background-color: red;\\n}\\n.aISelect {\\n  opacity: 0.5;\\n  background-color: blue;\\n}\\n.bothSelect {\\n  background-color: purple;\\n}\\n#statistics td {\\n  text-align: left;\\n  font-size: 18px;\\n}\\n#aIAccuracy,\\n#aIGain,\\n#normalizedGain {\\n  font-size: 20px;\\n  font-family: monospace;\\n}\\n\", \"\"]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NsaWVudC9pbmRleC5sZXNzPzVkMjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh1bmRlZmluZWQpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keSB7XFxuICBtYXJnaW46IDBweDtcXG4gIHBhZGRpbmc6IDBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuI2NlbnRlcmVkQmxvY2sge1xcbiAgd2lkdGg6IDc1MHB4O1xcbiAgdGV4dC1hbGlnbjogbGVmdDtcXG4gIG1hcmdpbjogMHB4IGF1dG87XFxufVxcbnAge1xcbiAgdGV4dC1pbmRlbnQ6IDMwcHg7XFxufVxcbiNyUFNUYWJsZSB7XFxuICBmbG9hdDogbGVmdDtcXG4gIG1hcmdpbi1yaWdodDogNDBweDtcXG4gIGJvcmRlci1zcGFjaW5nOiAzcHg7XFxufVxcbnRkIHtcXG4gIHBhZGRpbmc6IDRweDtcXG4gIGhlaWdodDogMzBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmluZGV4Q29sdW1uIHtcXG4gIHdpZHRoOiAxNTBweDtcXG59XFxuLnN0YXRlQ29sdW1uIHtcXG4gIHdpZHRoOiA1MHB4O1xcbn1cXG4uYnV0dG9uIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUY1RjU7XFxuICBib3JkZXI6IHNvbGlkIDFweCBibGFjaztcXG4gIHBhZGRpbmc6IDBweDtcXG4gIC1tb3otYm9yZGVyLXJhZGl1czogN3B4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZm9udC1zaXplOiAyNXB4O1xcbn1cXG4uYnV0dG9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNDRkM7XFxufVxcbi5odW1hblNlbGVjdCxcXG4uYUlTZWxlY3QsXFxuLmJvdGhTZWxlY3Qge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXJnaW46IGF1dG87XFxuICB3aWR0aDogMzBweDtcXG4gIGhlaWdodDogMzBweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmh1bWFuU2VsZWN0IHtcXG4gIG9wYWNpdHk6IDAuNTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuLmFJU2VsZWN0IHtcXG4gIG9wYWNpdHk6IDAuNTtcXG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XFxufVxcbi5ib3RoU2VsZWN0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHB1cnBsZTtcXG59XFxuI3N0YXRpc3RpY3MgdGQge1xcbiAgdGV4dC1hbGlnbjogbGVmdDtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG59XFxuI2FJQWNjdXJhY3ksXFxuI2FJR2FpbixcXG4jbm9ybWFsaXplZEdhaW4ge1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2Nzcy1sb2FkZXIhLi9+L2xlc3MtbG9hZGVyL2Rpc3QhLi9jbGllbnQvaW5kZXgubGVzc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/ZGEwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

eval("module.exports = \"<!--<doctype html>\\r\\n<html>\\r\\n\\t<head>\\r\\n\\t\\t<title>RPS Learner v.1.3</title>\\r\\n\\t\\t<link rel=\\\"stylesheet\\\" type=\\\"text/less\\\" src=\\\"index.less\\\">-->\\r\\n\\t\\t<!--<script type=\\\"text/javascript\\\" src=\\\"index.js\\\">\\r\\n\\t</head>\\r\\n\\t<body>-->\\r\\n\\t\\t<b>Rock, Paper, Scissors Learner:</b><br />\\r\\n\\t\\tan AI opponent that plays and gets better through practice. <a href=\\\"AboutRPSLearner.html\\\">More information...</a><br />\\r\\n\\t\\t<div id=\\\"centeredBlock\\\">\\r\\n\\t\\t\\t<p><b>Note:</b> The computer's predictions are just that: <i>predictions</i> of your next choice. If the computer were actually choosing its own moves, as you are, it would just choose the move that would beat its prediction. In this demonstration, the computer's predictions are just left at predictions so that it's easier to see when it wins (whenever your choice and its prediction overlap, which is purple in the history.)</p>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<table id=\\\"rPSTable\\\">\\r\\n\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"indexColumn\\\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"stateColumn\\\">Rock</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"stateColumn\\\">Paper</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\\"stateColumn\\\">Scissors</td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody id=\\\"tableBody\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><span class=\\\"humanSelect\\\" style=\\\"float:left; width:1em; height:1em;\\\"></span>Your choice</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td id=\\\"selectRock\\\" class=\\\"button\\\" >&#x235C;<!-- alternative button labels: Rock &#x25EF; &#x235C; &#x2296; &#x2295; &#x2297; &#x20DD; --></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td id=\\\"selectPaper\\\" class=\\\"button\\\">&#x2395;<!-- alternative button labels: Paper --></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td id=\\\"selectScissors\\\" class=\\\"button\\\">&#x2704;<!-- alternative button labels: Scissors &#x2703; --></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><span class=\\\"aISelect\\\" style=\\\"float:left; width:1em; height:1em;\\\"></span>AI's prediction</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><div id=\\\"rockGuess\\\"></div></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><div id=\\\"paperGuess\\\"></div></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td><div id=\\\"scissorsGuess\\\"></div></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>History:</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<!-- options section -->\\r\\n\\t\\t\\t\\t<input id=\\\"guessVisible\\\" name=\\\"guessVisible\\\" type=\\\"checkbox\\\" onclick=\\\"enforcePredictionVisibility()\\\" />AI Prediction visible<br />\\r\\n\\t\\t\\t\\tRecall limit: <input id=\\\"recall\\\" name=\\\"recall\\\" type=\\\"text\\\" onblur=\\\"enforceRecall()\\\" value=\\\"Infinity\\\" style=\\\"font-size:18px;width:5em;font-family:monospace;\\\"><br />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t<hr />\\r\\n\\t\\t\\t\\t<br />\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<table id=\\\"statistics\\\">\\r\\n\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>AI Accuracy:</td>\\t<td><span id=\\\"aIAccuracy\\\"></span></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>Gain from AI:</td>\\t<td><span id=\\\"aIGain\\\"></span></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>Normalized:</td>\\t<td><span id=\\\"normalizedGain\\\"></span></td>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t</div>\\r\\n\\t<!--</body>\\r\\n</html>-->\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NsaWVudC9pbmRleC5odG1sP2FmMjAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS08ZG9jdHlwZSBodG1sPlxcclxcbjxodG1sPlxcclxcblxcdDxoZWFkPlxcclxcblxcdFxcdDx0aXRsZT5SUFMgTGVhcm5lciB2LjEuMzwvdGl0bGU+XFxyXFxuXFx0XFx0PGxpbmsgcmVsPVxcXCJzdHlsZXNoZWV0XFxcIiB0eXBlPVxcXCJ0ZXh0L2xlc3NcXFwiIHNyYz1cXFwiaW5kZXgubGVzc1xcXCI+LS0+XFxyXFxuXFx0XFx0PCEtLTxzY3JpcHQgdHlwZT1cXFwidGV4dC9qYXZhc2NyaXB0XFxcIiBzcmM9XFxcImluZGV4LmpzXFxcIj5cXHJcXG5cXHQ8L2hlYWQ+XFxyXFxuXFx0PGJvZHk+LS0+XFxyXFxuXFx0XFx0PGI+Um9jaywgUGFwZXIsIFNjaXNzb3JzIExlYXJuZXI6PC9iPjxiciAvPlxcclxcblxcdFxcdGFuIEFJIG9wcG9uZW50IHRoYXQgcGxheXMgYW5kIGdldHMgYmV0dGVyIHRocm91Z2ggcHJhY3RpY2UuIDxhIGhyZWY9XFxcIkFib3V0UlBTTGVhcm5lci5odG1sXFxcIj5Nb3JlIGluZm9ybWF0aW9uLi4uPC9hPjxiciAvPlxcclxcblxcdFxcdDxkaXYgaWQ9XFxcImNlbnRlcmVkQmxvY2tcXFwiPlxcclxcblxcdFxcdFxcdDxwPjxiPk5vdGU6PC9iPiBUaGUgY29tcHV0ZXIncyBwcmVkaWN0aW9ucyBhcmUganVzdCB0aGF0OiA8aT5wcmVkaWN0aW9uczwvaT4gb2YgeW91ciBuZXh0IGNob2ljZS4gSWYgdGhlIGNvbXB1dGVyIHdlcmUgYWN0dWFsbHkgY2hvb3NpbmcgaXRzIG93biBtb3ZlcywgYXMgeW91IGFyZSwgaXQgd291bGQganVzdCBjaG9vc2UgdGhlIG1vdmUgdGhhdCB3b3VsZCBiZWF0IGl0cyBwcmVkaWN0aW9uLiBJbiB0aGlzIGRlbW9uc3RyYXRpb24sIHRoZSBjb21wdXRlcidzIHByZWRpY3Rpb25zIGFyZSBqdXN0IGxlZnQgYXQgcHJlZGljdGlvbnMgc28gdGhhdCBpdCdzIGVhc2llciB0byBzZWUgd2hlbiBpdCB3aW5zICh3aGVuZXZlciB5b3VyIGNob2ljZSBhbmQgaXRzIHByZWRpY3Rpb24gb3ZlcmxhcCwgd2hpY2ggaXMgcHVycGxlIGluIHRoZSBoaXN0b3J5Lik8L3A+XFxyXFxuXFx0XFx0XFx0XFxyXFxuXFx0XFx0XFx0PGRpdj5cXHJcXG5cXHRcXHRcXHRcXHQ8dGFibGUgaWQ9XFxcInJQU1RhYmxlXFxcIj5cXHJcXG5cXHRcXHRcXHRcXHRcXHQ8dGhlYWQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0PHRyPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZCBjbGFzcz1cXFwiaW5kZXhDb2x1bW5cXFwiPjwvdGQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0PHRkIGNsYXNzPVxcXCJzdGF0ZUNvbHVtblxcXCI+Um9jazwvdGQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0PHRkIGNsYXNzPVxcXCJzdGF0ZUNvbHVtblxcXCI+UGFwZXI8L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZCBjbGFzcz1cXFwic3RhdGVDb2x1bW5cXFwiPlNjaXNzb3JzPC90ZD5cXHJcXG5cXHRcXHRcXHRcXHRcXHRcXHQ8L3RyPlxcclxcblxcdFxcdFxcdFxcdFxcdDwvdGhlYWQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0PHRib2R5IGlkPVxcXCJ0YWJsZUJvZHlcXFwiPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdDx0cj5cXHJcXG5cXHRcXHRcXHRcXHRcXHRcXHRcXHQ8dGQ+PHNwYW4gY2xhc3M9XFxcImh1bWFuU2VsZWN0XFxcIiBzdHlsZT1cXFwiZmxvYXQ6bGVmdDsgd2lkdGg6MWVtOyBoZWlnaHQ6MWVtO1xcXCI+PC9zcGFuPllvdXIgY2hvaWNlPC90ZD5cXHJcXG5cXHRcXHRcXHRcXHRcXHRcXHRcXHQ8dGQgaWQ9XFxcInNlbGVjdFJvY2tcXFwiIGNsYXNzPVxcXCJidXR0b25cXFwiID4mI3gyMzVDOzwhLS0gYWx0ZXJuYXRpdmUgYnV0dG9uIGxhYmVsczogUm9jayAmI3gyNUVGOyAmI3gyMzVDOyAmI3gyMjk2OyAmI3gyMjk1OyAmI3gyMjk3OyAmI3gyMEREOyAtLT48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZCBpZD1cXFwic2VsZWN0UGFwZXJcXFwiIGNsYXNzPVxcXCJidXR0b25cXFwiPiYjeDIzOTU7PCEtLSBhbHRlcm5hdGl2ZSBidXR0b24gbGFiZWxzOiBQYXBlciAtLT48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZCBpZD1cXFwic2VsZWN0U2Npc3NvcnNcXFwiIGNsYXNzPVxcXCJidXR0b25cXFwiPiYjeDI3MDQ7PCEtLSBhbHRlcm5hdGl2ZSBidXR0b24gbGFiZWxzOiBTY2lzc29ycyAmI3gyNzAzOyAtLT48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdDwvdHI+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0PHRyPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZD48c3BhbiBjbGFzcz1cXFwiYUlTZWxlY3RcXFwiIHN0eWxlPVxcXCJmbG9hdDpsZWZ0OyB3aWR0aDoxZW07IGhlaWdodDoxZW07XFxcIj48L3NwYW4+QUkncyBwcmVkaWN0aW9uPC90ZD5cXHJcXG5cXHRcXHRcXHRcXHRcXHRcXHRcXHQ8dGQ+PGRpdiBpZD1cXFwicm9ja0d1ZXNzXFxcIj48L2Rpdj48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZD48ZGl2IGlkPVxcXCJwYXBlckd1ZXNzXFxcIj48L2Rpdj48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZD48ZGl2IGlkPVxcXCJzY2lzc29yc0d1ZXNzXFxcIj48L2Rpdj48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdDwvdHI+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0PHRyPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZD48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdDwvdHI+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0PHRyPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZD5IaXN0b3J5OjwvdGQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0PHRkPjwvdGQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0PHRkPjwvdGQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0PHRkPjwvdGQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0PC90cj5cXHJcXG5cXHRcXHRcXHRcXHRcXHQ8L3Rib2R5PlxcclxcblxcdFxcdFxcdFxcdDwvdGFibGU+XFxyXFxuXFx0XFx0XFx0XFx0XFxyXFxuXFx0XFx0XFx0XFx0PCEtLSBvcHRpb25zIHNlY3Rpb24gLS0+XFxyXFxuXFx0XFx0XFx0XFx0PGlucHV0IGlkPVxcXCJndWVzc1Zpc2libGVcXFwiIG5hbWU9XFxcImd1ZXNzVmlzaWJsZVxcXCIgdHlwZT1cXFwiY2hlY2tib3hcXFwiIG9uY2xpY2s9XFxcImVuZm9yY2VQcmVkaWN0aW9uVmlzaWJpbGl0eSgpXFxcIiAvPkFJIFByZWRpY3Rpb24gdmlzaWJsZTxiciAvPlxcclxcblxcdFxcdFxcdFxcdFJlY2FsbCBsaW1pdDogPGlucHV0IGlkPVxcXCJyZWNhbGxcXFwiIG5hbWU9XFxcInJlY2FsbFxcXCIgdHlwZT1cXFwidGV4dFxcXCIgb25ibHVyPVxcXCJlbmZvcmNlUmVjYWxsKClcXFwiIHZhbHVlPVxcXCJJbmZpbml0eVxcXCIgc3R5bGU9XFxcImZvbnQtc2l6ZToxOHB4O3dpZHRoOjVlbTtmb250LWZhbWlseTptb25vc3BhY2U7XFxcIj48YnIgLz5cXHJcXG5cXHRcXHRcXHRcXHQ8YnIgLz5cXHJcXG5cXHRcXHRcXHRcXHQ8aHIgLz5cXHJcXG5cXHRcXHRcXHRcXHQ8YnIgLz5cXHJcXG5cXHRcXHRcXHRcXHRcXHJcXG5cXHRcXHRcXHRcXHQ8dGFibGUgaWQ9XFxcInN0YXRpc3RpY3NcXFwiPlxcclxcblxcdFxcdFxcdFxcdFxcdDx0Ym9keT5cXHJcXG5cXHRcXHRcXHRcXHRcXHRcXHQ8dHI+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0PHRkPkFJIEFjY3VyYWN5OjwvdGQ+XFx0PHRkPjxzcGFuIGlkPVxcXCJhSUFjY3VyYWN5XFxcIj48L3NwYW4+PC90ZD5cXHJcXG5cXHRcXHRcXHRcXHRcXHRcXHQ8L3RyPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdDx0cj5cXHJcXG5cXHRcXHRcXHRcXHRcXHRcXHRcXHQ8dGQ+R2FpbiBmcm9tIEFJOjwvdGQ+XFx0PHRkPjxzcGFuIGlkPVxcXCJhSUdhaW5cXFwiPjwvc3Bhbj48L3RkPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdDwvdHI+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0PHRyPlxcclxcblxcdFxcdFxcdFxcdFxcdFxcdFxcdDx0ZD5Ob3JtYWxpemVkOjwvdGQ+XFx0PHRkPjxzcGFuIGlkPVxcXCJub3JtYWxpemVkR2FpblxcXCI+PC9zcGFuPjwvdGQ+XFxyXFxuXFx0XFx0XFx0XFx0XFx0XFx0PC90cj5cXHJcXG5cXHRcXHRcXHRcXHRcXHQ8L3Rib2R5PlxcclxcblxcdFxcdFxcdFxcdDwvdGFibGU+XFxyXFxuXFx0XFx0XFx0PC9kaXY+XFxyXFxuXFx0XFx0XFx0PGJyIC8+XFxyXFxuXFx0XFx0XFx0PGJyIC8+XFxyXFxuXFx0XFx0XFx0PGJyIC8+XFxyXFxuXFx0XFx0XFx0PGJyIC8+XFxyXFxuXFx0XFx0PC9kaXY+XFxyXFxuXFx0PCEtLTwvYm9keT5cXHJcXG48L2h0bWw+LS0+XCJcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC9pbmRleC5odG1sXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

eval("/****** ABOUT ******\n\nEntry\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.07.29\n\tReleased: \n\tDescription: A key-value pair.\n\t\n\n****** ***** ******/\n\n//UNF: below was pasted from StateLearner.js, and I'm still converting it into GroupLearner\n\n/******** CONSTRUCTOR ********/\n\nfunction Entry (key, value)\n{\n\tthis.key = key;\n\tthis.value = value;\n}\n\n\n/******** PROPERTIES ********/\n\nEntry.prototype.key;\nEntry.prototype.value;\n\n\n/******** METHODS ********/\n\nEntry.prototype.clone = function ()\n{\n\treturn new Entry(this.key.clone(), this.value.clone());\n}\n\nEntry.prototype.toString = function ()\n{\n\treturn this.key+\"\\t=>\\t\"+this.value;\n}\n\nmodule.exports = Entry;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9FbnRyeS5qcz8xZDFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiogQUJPVVQgKioqKioqXG5cbkVudHJ5XG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNy4wNy4yOVxuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBIGtleS12YWx1ZSBwYWlyLlxuXHRcblxuKioqKioqICoqKioqICoqKioqKi9cblxuLy9VTkY6IGJlbG93IHdhcyBwYXN0ZWQgZnJvbSBTdGF0ZUxlYXJuZXIuanMsIGFuZCBJJ20gc3RpbGwgY29udmVydGluZyBpdCBpbnRvIEdyb3VwTGVhcm5lclxuXG4vKioqKioqKiogQ09OU1RSVUNUT1IgKioqKioqKiovXG5cbmZ1bmN0aW9uIEVudHJ5IChrZXksIHZhbHVlKVxue1xuXHR0aGlzLmtleSA9IGtleTtcblx0dGhpcy52YWx1ZSA9IHZhbHVlO1xufVxuXG5cbi8qKioqKioqKiBQUk9QRVJUSUVTICoqKioqKioqL1xuXG5FbnRyeS5wcm90b3R5cGUua2V5O1xuRW50cnkucHJvdG90eXBlLnZhbHVlO1xuXG5cbi8qKioqKioqKiBNRVRIT0RTICoqKioqKioqL1xuXG5FbnRyeS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiAoKVxue1xuXHRyZXR1cm4gbmV3IEVudHJ5KHRoaXMua2V5LmNsb25lKCksIHRoaXMudmFsdWUuY2xvbmUoKSk7XG59XG5cbkVudHJ5LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpXG57XG5cdHJldHVybiB0aGlzLmtleStcIlxcdD0+XFx0XCIrdGhpcy52YWx1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFbnRyeTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vc3RhdGUtbGVhcm5lci9FbnRyeS5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

eval("/****** ABOUT ******\n\nIncidenceMap\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.27\n\tReleased: \n\tDescription: An object which stores the number of times that a value is encountered. The difference between this and a plain map is that .get(index) returns 0 when no entry with that key exists, and this object adds the .increment(key, [times]) function which increments the count of the key the given number of times, or once if times is undefined.\n\t\n\n****** ***** ******/\n\n//try using native Map\t\n//const Map = require(\"./Map.js\");\n\n\n/******* CONSTRUCTOR *******/\n\nfunction IncidenceMap ()\n{\n\tthis._map = new Map();\n\tthis.size = 0;\n}\n\n\n/******* PROPERTIES *******/\n\nIncidenceMap.prototype._map;\nIncidenceMap.prototype.size;\n\n\n/******* METHODS *******/\n\nIncidenceMap.prototype.increment = function (key, times)\n{\n\ttimes = (times == undefined)? 1 : times;\n\tvar count = this.set(key, this.get(key)+times);\n\treturn count;\n}\n\nIncidenceMap.prototype.addMap = function (incidence)\n{\n\tvar result = new IncidenceMap();\n\t\n\tfunction count (entry)\n\t{\n\t\tresult.increment(entry.key, entry.value);\n\t}\n\t\n\tthis.forEach(count);\n\tincidence.forEach(count);\n\t\n\treturn result;\n}\n\nIncidenceMap.prototype.getMaxima = function ()\n{\n\tvar maxima = new Array();\n\tvar maxCount = 0;\n\tthis.forEach(function (entry)\n\t\t{\n\t\t\tif (entry.value > maxCount)\n\t\t\t{\n\t\t\t\tmaxima = new Array();\n\t\t\t\tmaxima.push(entry.key);\n\t\t\t\tmaxCount = entry.value;\n\t\t\t}\n\t\t\telse if (entry.value == maxCount)\n\t\t\t{\n\t\t\t\tmaxima.push(entry.key);\n\t\t\t}\n\t\t});\n\treturn maxima;\n}\n\nIncidenceMap.prototype.get = function (index)\n{\n\tvar count = this._map.get(index);\n\tif (count == undefined)\n\t{\n\t\tcount = 0;\n\t}\n\t\n\treturn count;\n}\n\nIncidenceMap.prototype.set = function (indexName, newValue)\n{\n\tthis._map.set(indexName, newValue);\n\tthis.size = this._map.size;\n\treturn newValue;\n}\n\nIncidenceMap.prototype.contains = function (indexName)\n{\n\treturn this._map.contains(indexName);\n}\n\nIncidenceMap.prototype.forEach = function (f)\n{\n\tthis._map.forEach(f);\n}\n\nIncidenceMap.prototype.clone = function ()\n{\n\tvar emptyMap = new IncidenceMap();\n\tvar spawn = emptyMap.addMap(this._map.clone());\n\t\n\treturn spawn;\n}\n\nIncidenceMap.prototype.toString = function ()\n{\n\treturn this._map.toString();\n}\n\nmodule.exports = IncidenceMap;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9JbmNpZGVuY2VNYXAuanM/MWY1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqIEFCT1VUICoqKioqKlxuXG5JbmNpZGVuY2VNYXBcblxuXHRBdXRob3I6IFRvbSBMYW1iLCBMYW1ieXRlLmNvbVxuXHRDcmVhdGVkOiAyMDA3LjA4LjI3XG5cdFJlbGVhc2VkOiBcblx0RGVzY3JpcHRpb246IEFuIG9iamVjdCB3aGljaCBzdG9yZXMgdGhlIG51bWJlciBvZiB0aW1lcyB0aGF0IGEgdmFsdWUgaXMgZW5jb3VudGVyZWQuIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhpcyBhbmQgYSBwbGFpbiBtYXAgaXMgdGhhdCAuZ2V0KGluZGV4KSByZXR1cm5zIDAgd2hlbiBubyBlbnRyeSB3aXRoIHRoYXQga2V5IGV4aXN0cywgYW5kIHRoaXMgb2JqZWN0IGFkZHMgdGhlIC5pbmNyZW1lbnQoa2V5LCBbdGltZXNdKSBmdW5jdGlvbiB3aGljaCBpbmNyZW1lbnRzIHRoZSBjb3VudCBvZiB0aGUga2V5IHRoZSBnaXZlbiBudW1iZXIgb2YgdGltZXMsIG9yIG9uY2UgaWYgdGltZXMgaXMgdW5kZWZpbmVkLlxuXHRcblxuKioqKioqICoqKioqICoqKioqKi9cblxuLy90cnkgdXNpbmcgbmF0aXZlIE1hcFx0XG4vL2NvbnN0IE1hcCA9IHJlcXVpcmUoXCIuL01hcC5qc1wiKTtcblxuXG4vKioqKioqKiBDT05TVFJVQ1RPUiAqKioqKioqL1xuXG5mdW5jdGlvbiBJbmNpZGVuY2VNYXAgKClcbntcblx0dGhpcy5fbWFwID0gbmV3IE1hcCgpO1xuXHR0aGlzLnNpemUgPSAwO1xufVxuXG5cbi8qKioqKioqIFBST1BFUlRJRVMgKioqKioqKi9cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5fbWFwO1xuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5zaXplO1xuXG5cbi8qKioqKioqIE1FVEhPRFMgKioqKioqKi9cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5pbmNyZW1lbnQgPSBmdW5jdGlvbiAoa2V5LCB0aW1lcylcbntcblx0dGltZXMgPSAodGltZXMgPT0gdW5kZWZpbmVkKT8gMSA6IHRpbWVzO1xuXHR2YXIgY291bnQgPSB0aGlzLnNldChrZXksIHRoaXMuZ2V0KGtleSkrdGltZXMpO1xuXHRyZXR1cm4gY291bnQ7XG59XG5cbkluY2lkZW5jZU1hcC5wcm90b3R5cGUuYWRkTWFwID0gZnVuY3Rpb24gKGluY2lkZW5jZSlcbntcblx0dmFyIHJlc3VsdCA9IG5ldyBJbmNpZGVuY2VNYXAoKTtcblx0XG5cdGZ1bmN0aW9uIGNvdW50IChlbnRyeSlcblx0e1xuXHRcdHJlc3VsdC5pbmNyZW1lbnQoZW50cnkua2V5LCBlbnRyeS52YWx1ZSk7XG5cdH1cblx0XG5cdHRoaXMuZm9yRWFjaChjb3VudCk7XG5cdGluY2lkZW5jZS5mb3JFYWNoKGNvdW50KTtcblx0XG5cdHJldHVybiByZXN1bHQ7XG59XG5cbkluY2lkZW5jZU1hcC5wcm90b3R5cGUuZ2V0TWF4aW1hID0gZnVuY3Rpb24gKClcbntcblx0dmFyIG1heGltYSA9IG5ldyBBcnJheSgpO1xuXHR2YXIgbWF4Q291bnQgPSAwO1xuXHR0aGlzLmZvckVhY2goZnVuY3Rpb24gKGVudHJ5KVxuXHRcdHtcblx0XHRcdGlmIChlbnRyeS52YWx1ZSA+IG1heENvdW50KVxuXHRcdFx0e1xuXHRcdFx0XHRtYXhpbWEgPSBuZXcgQXJyYXkoKTtcblx0XHRcdFx0bWF4aW1hLnB1c2goZW50cnkua2V5KTtcblx0XHRcdFx0bWF4Q291bnQgPSBlbnRyeS52YWx1ZTtcblx0XHRcdH1cblx0XHRcdGVsc2UgaWYgKGVudHJ5LnZhbHVlID09IG1heENvdW50KVxuXHRcdFx0e1xuXHRcdFx0XHRtYXhpbWEucHVzaChlbnRyeS5rZXkpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRyZXR1cm4gbWF4aW1hO1xufVxuXG5JbmNpZGVuY2VNYXAucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChpbmRleClcbntcblx0dmFyIGNvdW50ID0gdGhpcy5fbWFwLmdldChpbmRleCk7XG5cdGlmIChjb3VudCA9PSB1bmRlZmluZWQpXG5cdHtcblx0XHRjb3VudCA9IDA7XG5cdH1cblx0XG5cdHJldHVybiBjb3VudDtcbn1cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoaW5kZXhOYW1lLCBuZXdWYWx1ZSlcbntcblx0dGhpcy5fbWFwLnNldChpbmRleE5hbWUsIG5ld1ZhbHVlKTtcblx0dGhpcy5zaXplID0gdGhpcy5fbWFwLnNpemU7XG5cdHJldHVybiBuZXdWYWx1ZTtcbn1cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5jb250YWlucyA9IGZ1bmN0aW9uIChpbmRleE5hbWUpXG57XG5cdHJldHVybiB0aGlzLl9tYXAuY29udGFpbnMoaW5kZXhOYW1lKTtcbn1cblxuSW5jaWRlbmNlTWFwLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gKGYpXG57XG5cdHRoaXMuX21hcC5mb3JFYWNoKGYpO1xufVxuXG5JbmNpZGVuY2VNYXAucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24gKClcbntcblx0dmFyIGVtcHR5TWFwID0gbmV3IEluY2lkZW5jZU1hcCgpO1xuXHR2YXIgc3Bhd24gPSBlbXB0eU1hcC5hZGRNYXAodGhpcy5fbWFwLmNsb25lKCkpO1xuXHRcblx0cmV0dXJuIHNwYXduO1xufVxuXG5JbmNpZGVuY2VNYXAucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKClcbntcblx0cmV0dXJuIHRoaXMuX21hcC50b1N0cmluZygpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEluY2lkZW5jZU1hcDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vc3RhdGUtbGVhcm5lci9JbmNpZGVuY2VNYXAuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

eval("/****** ABOUT ******\n\nPredictionData\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.02\n\tReleased: \n\tDescription: An object specifying all the properties of a prediction.\n\t\n\n****** ***** ******/\n\t\n\n/******** CONSTRUCTOR ********/\n\nfunction PredictionData (matchLength, states) \n{\n\tthis.matchLength = matchLength;\n\tthis.states = states || new Array();\n}\n\n\n/******** PROPERTIES ********/\n\n//The longest history match that led to this prediction.\nPredictionData.prototype.matchLength;\n//The predicted state (or states, in which case this is an array of states)\nPredictionData.prototype.states;\n\n\n/******** METHODS ********/\n\nPredictionData.prototype.getIsValid = function ()\n{\n\treturn (this.matchLength != undefined);\n}\n\nmodule.exports = PredictionData;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9QcmVkaWN0aW9uRGF0YS5qcz9kNGQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKioqKiogQUJPVVQgKioqKioqXG5cblByZWRpY3Rpb25EYXRhXG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNy4wOC4wMlxuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBbiBvYmplY3Qgc3BlY2lmeWluZyBhbGwgdGhlIHByb3BlcnRpZXMgb2YgYSBwcmVkaWN0aW9uLlxuXHRcblxuKioqKioqICoqKioqICoqKioqKi9cblx0XG5cbi8qKioqKioqKiBDT05TVFJVQ1RPUiAqKioqKioqKi9cblxuZnVuY3Rpb24gUHJlZGljdGlvbkRhdGEgKG1hdGNoTGVuZ3RoLCBzdGF0ZXMpIFxue1xuXHR0aGlzLm1hdGNoTGVuZ3RoID0gbWF0Y2hMZW5ndGg7XG5cdHRoaXMuc3RhdGVzID0gc3RhdGVzIHx8IG5ldyBBcnJheSgpO1xufVxuXG5cbi8qKioqKioqKiBQUk9QRVJUSUVTICoqKioqKioqL1xuXG4vL1RoZSBsb25nZXN0IGhpc3RvcnkgbWF0Y2ggdGhhdCBsZWQgdG8gdGhpcyBwcmVkaWN0aW9uLlxuUHJlZGljdGlvbkRhdGEucHJvdG90eXBlLm1hdGNoTGVuZ3RoO1xuLy9UaGUgcHJlZGljdGVkIHN0YXRlIChvciBzdGF0ZXMsIGluIHdoaWNoIGNhc2UgdGhpcyBpcyBhbiBhcnJheSBvZiBzdGF0ZXMpXG5QcmVkaWN0aW9uRGF0YS5wcm90b3R5cGUuc3RhdGVzO1xuXG5cbi8qKioqKioqKiBNRVRIT0RTICoqKioqKioqL1xuXG5QcmVkaWN0aW9uRGF0YS5wcm90b3R5cGUuZ2V0SXNWYWxpZCA9IGZ1bmN0aW9uICgpXG57XG5cdHJldHVybiAodGhpcy5tYXRjaExlbmd0aCAhPSB1bmRlZmluZWQpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByZWRpY3Rpb25EYXRhO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9zdGF0ZS1sZWFybmVyL1ByZWRpY3Rpb25EYXRhLmpzXG4vLyBtb2R1bGUgaWQgPSA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

eval("\n\n/****** ABOUT ******\n\nStateLearner\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2006.07.13\n\tReleased: \n\tDescription: An object that takes input and stores into history, which it uses to try to predict the next input.\n\t\n\t\n****** ***** ******/\n\nconst ArrayMap = __webpack_require__(0);\nconst PredictionData = __webpack_require__(8);\nconst StateLine = __webpack_require__(10);\n\n\n/******** CONSTRUCTOR ********/\n\nfunction StateLearner (recall)\n{\n\tthis.recall = recall || Infinity;\n\tthis._stateLine = new StateLine();\n}\n\n\n/******** PROPERTIES ********/\n\n//Maximum length for a sequence of states to be stored or retrieved\nStateLearner.prototype.recall;\n//This state learner's state line\nStateLearner.prototype._stateLine;\n\n\n/******** METHODS ********/\n\nStateLearner.prototype.append = function (state)\n{\n\tthis._stateLine.add(state);\n}\n\nStateLearner.prototype.makePrediction = function ()\n{\n\t//???: potentials should really be a set, but I just don't have one made yet. But isn't an array sufficient, even better? I'm pretty sure that direct access to an element of an array would be faster than a getter method on a set object by orders of magnitude.\n\n\tvar historyFragment = this._stateLine.history.slice(0);\n\t//we know we won't be able to find any states that have come after the entire history, start with the second-longest history by removing the most distant state\n\thistoryFragment.shift();\n\t//only search for as much history as this instance can recall. Since the state that is potentially to be found in incidence is counted when counting recall capacity, history fragment can only be recall-1\n\twhile (historyFragment.length > this.recall-1)\n\t{\n\t\thistoryFragment.shift();\n\t}\n\t\n\tvar potentials = new Array();\n\tvar predictionData = new PredictionData();\n\twhile (historyFragment.length >= 0)\n\t{\n\t\t//at the end of each round, if there is only one potential state, that means that all other potential states have been eliminated in previous iterations, so we return that. As a result, if at the beginning of an iteration, potentials is non-empty, that means that there must have been more than one left at the end of the last iteration. When there is more than one left, that means there was a tie at the end of the last iteration, so we settle that by finding a maximum among potentials in the incidence of this iteration. If potentials is empty, however, we fill it with the maxima of incidence. If we fill potentials with all of incidence when it is empty, we can use the same algorithm when potentials is empty as when it is non-empty.\n\t\tvar incidence = this._stateLine.incidenceFollowing(historyFragment);\n\n\t\tif (potentials.length == 0)\n\t\t{\n\t\t\tincidence.forEach(function (value, key) {\n\t\t\t\tpotentials.push(key);\n\t\t\t});\n\t\t\t\n\t\t\tif (potentials.length >= 1) predictionData.matchLength = historyFragment.length;\n\t\t}\n\t\tvar max = 0;\n\t\tvar newPotentials = new Array();\n\t\tfor (var i = 0; i <= potentials.length-1; i++)\n\t\t{\n\t\t\tvar currentState = potentials[i];\n\t\t\tvar stateCount = incidence.get(currentState);\n\t\t\tif (stateCount > max)\n\t\t\t{\n\t\t\t\tmax = stateCount;\n\t\t\t\tnewPotentials = new Array();\n\t\t\t\tnewPotentials.push(currentState);\n\t\t\t}\n\t\t\telse if (stateCount == max)\n\t\t\t{\n\t\t\t\tnewPotentials.push(currentState);\n\t\t\t}\n\t\t}\n\t\tpotentials = newPotentials;\n\n\t\tif (potentials.length == 1)\n\t\t{\n\t\t\tpredictionData.states = potentials;\n\t\t\treturn predictionData;\n\t\t}\n\t\telse if (historyFragment.length == 0)\n\t\t{\n\t\t\tif (potentials.length == 0)\n\t\t\t{\n\t\t\t\t//because all history including null history has been checked for a match and potentials is still empty, we can infer that there was never any input to begin with.\n\t\t\t\t\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//since there hasn't been a solitary maximum found at any level of detail, and the list of potentials is non-empty, we know that there must be a tie between two or more states. By returning the potentials array, the user can choose what to do with the all the relevant information available.\n\t\t\t\tpredictionData.states = potentials;\n\t\t\t\treturn predictionData;\n\t\t\t}\n\t\t}\n\t\t\n\t\thistoryFragment.shift();\n\t}\n\t\n\t//recall is 0, so it's impossible to predict anything\n\treturn undefined;\n}\n\nmodule.exports = StateLearner;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vc3RhdGUtbGVhcm5lci9TdGF0ZUxlYXJuZXIuanM/YjI1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLyoqKioqKiBBQk9VVCAqKioqKipcblxuU3RhdGVMZWFybmVyXG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNi4wNy4xM1xuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBbiBvYmplY3QgdGhhdCB0YWtlcyBpbnB1dCBhbmQgc3RvcmVzIGludG8gaGlzdG9yeSwgd2hpY2ggaXQgdXNlcyB0byB0cnkgdG8gcHJlZGljdCB0aGUgbmV4dCBpbnB1dC5cblx0XG5cdFxuKioqKioqICoqKioqICoqKioqKi9cblxuY29uc3QgQXJyYXlNYXAgPSByZXF1aXJlKFwiLi9BcnJheU1hcC5qc1wiKTtcbmNvbnN0IFByZWRpY3Rpb25EYXRhID0gcmVxdWlyZShcIi4vUHJlZGljdGlvbkRhdGEuanNcIik7XG5jb25zdCBTdGF0ZUxpbmUgPSByZXF1aXJlKFwiLi9TdGF0ZUxpbmUuanNcIik7XG5cblxuLyoqKioqKioqIENPTlNUUlVDVE9SICoqKioqKioqL1xuXG5mdW5jdGlvbiBTdGF0ZUxlYXJuZXIgKHJlY2FsbClcbntcblx0dGhpcy5yZWNhbGwgPSByZWNhbGwgfHwgSW5maW5pdHk7XG5cdHRoaXMuX3N0YXRlTGluZSA9IG5ldyBTdGF0ZUxpbmUoKTtcbn1cblxuXG4vKioqKioqKiogUFJPUEVSVElFUyAqKioqKioqKi9cblxuLy9NYXhpbXVtIGxlbmd0aCBmb3IgYSBzZXF1ZW5jZSBvZiBzdGF0ZXMgdG8gYmUgc3RvcmVkIG9yIHJldHJpZXZlZFxuU3RhdGVMZWFybmVyLnByb3RvdHlwZS5yZWNhbGw7XG4vL1RoaXMgc3RhdGUgbGVhcm5lcidzIHN0YXRlIGxpbmVcblN0YXRlTGVhcm5lci5wcm90b3R5cGUuX3N0YXRlTGluZTtcblxuXG4vKioqKioqKiogTUVUSE9EUyAqKioqKioqKi9cblxuU3RhdGVMZWFybmVyLnByb3RvdHlwZS5hcHBlbmQgPSBmdW5jdGlvbiAoc3RhdGUpXG57XG5cdHRoaXMuX3N0YXRlTGluZS5hZGQoc3RhdGUpO1xufVxuXG5TdGF0ZUxlYXJuZXIucHJvdG90eXBlLm1ha2VQcmVkaWN0aW9uID0gZnVuY3Rpb24gKClcbntcblx0Ly8/Pz86IHBvdGVudGlhbHMgc2hvdWxkIHJlYWxseSBiZSBhIHNldCwgYnV0IEkganVzdCBkb24ndCBoYXZlIG9uZSBtYWRlIHlldC4gQnV0IGlzbid0IGFuIGFycmF5IHN1ZmZpY2llbnQsIGV2ZW4gYmV0dGVyPyBJJ20gcHJldHR5IHN1cmUgdGhhdCBkaXJlY3QgYWNjZXNzIHRvIGFuIGVsZW1lbnQgb2YgYW4gYXJyYXkgd291bGQgYmUgZmFzdGVyIHRoYW4gYSBnZXR0ZXIgbWV0aG9kIG9uIGEgc2V0IG9iamVjdCBieSBvcmRlcnMgb2YgbWFnbml0dWRlLlxuXG5cdHZhciBoaXN0b3J5RnJhZ21lbnQgPSB0aGlzLl9zdGF0ZUxpbmUuaGlzdG9yeS5zbGljZSgwKTtcblx0Ly93ZSBrbm93IHdlIHdvbid0IGJlIGFibGUgdG8gZmluZCBhbnkgc3RhdGVzIHRoYXQgaGF2ZSBjb21lIGFmdGVyIHRoZSBlbnRpcmUgaGlzdG9yeSwgc3RhcnQgd2l0aCB0aGUgc2Vjb25kLWxvbmdlc3QgaGlzdG9yeSBieSByZW1vdmluZyB0aGUgbW9zdCBkaXN0YW50IHN0YXRlXG5cdGhpc3RvcnlGcmFnbWVudC5zaGlmdCgpO1xuXHQvL29ubHkgc2VhcmNoIGZvciBhcyBtdWNoIGhpc3RvcnkgYXMgdGhpcyBpbnN0YW5jZSBjYW4gcmVjYWxsLiBTaW5jZSB0aGUgc3RhdGUgdGhhdCBpcyBwb3RlbnRpYWxseSB0byBiZSBmb3VuZCBpbiBpbmNpZGVuY2UgaXMgY291bnRlZCB3aGVuIGNvdW50aW5nIHJlY2FsbCBjYXBhY2l0eSwgaGlzdG9yeSBmcmFnbWVudCBjYW4gb25seSBiZSByZWNhbGwtMVxuXHR3aGlsZSAoaGlzdG9yeUZyYWdtZW50Lmxlbmd0aCA+IHRoaXMucmVjYWxsLTEpXG5cdHtcblx0XHRoaXN0b3J5RnJhZ21lbnQuc2hpZnQoKTtcblx0fVxuXHRcblx0dmFyIHBvdGVudGlhbHMgPSBuZXcgQXJyYXkoKTtcblx0dmFyIHByZWRpY3Rpb25EYXRhID0gbmV3IFByZWRpY3Rpb25EYXRhKCk7XG5cdHdoaWxlIChoaXN0b3J5RnJhZ21lbnQubGVuZ3RoID49IDApXG5cdHtcblx0XHQvL2F0IHRoZSBlbmQgb2YgZWFjaCByb3VuZCwgaWYgdGhlcmUgaXMgb25seSBvbmUgcG90ZW50aWFsIHN0YXRlLCB0aGF0IG1lYW5zIHRoYXQgYWxsIG90aGVyIHBvdGVudGlhbCBzdGF0ZXMgaGF2ZSBiZWVuIGVsaW1pbmF0ZWQgaW4gcHJldmlvdXMgaXRlcmF0aW9ucywgc28gd2UgcmV0dXJuIHRoYXQuIEFzIGEgcmVzdWx0LCBpZiBhdCB0aGUgYmVnaW5uaW5nIG9mIGFuIGl0ZXJhdGlvbiwgcG90ZW50aWFscyBpcyBub24tZW1wdHksIHRoYXQgbWVhbnMgdGhhdCB0aGVyZSBtdXN0IGhhdmUgYmVlbiBtb3JlIHRoYW4gb25lIGxlZnQgYXQgdGhlIGVuZCBvZiB0aGUgbGFzdCBpdGVyYXRpb24uIFdoZW4gdGhlcmUgaXMgbW9yZSB0aGFuIG9uZSBsZWZ0LCB0aGF0IG1lYW5zIHRoZXJlIHdhcyBhIHRpZSBhdCB0aGUgZW5kIG9mIHRoZSBsYXN0IGl0ZXJhdGlvbiwgc28gd2Ugc2V0dGxlIHRoYXQgYnkgZmluZGluZyBhIG1heGltdW0gYW1vbmcgcG90ZW50aWFscyBpbiB0aGUgaW5jaWRlbmNlIG9mIHRoaXMgaXRlcmF0aW9uLiBJZiBwb3RlbnRpYWxzIGlzIGVtcHR5LCBob3dldmVyLCB3ZSBmaWxsIGl0IHdpdGggdGhlIG1heGltYSBvZiBpbmNpZGVuY2UuIElmIHdlIGZpbGwgcG90ZW50aWFscyB3aXRoIGFsbCBvZiBpbmNpZGVuY2Ugd2hlbiBpdCBpcyBlbXB0eSwgd2UgY2FuIHVzZSB0aGUgc2FtZSBhbGdvcml0aG0gd2hlbiBwb3RlbnRpYWxzIGlzIGVtcHR5IGFzIHdoZW4gaXQgaXMgbm9uLWVtcHR5LlxuXHRcdHZhciBpbmNpZGVuY2UgPSB0aGlzLl9zdGF0ZUxpbmUuaW5jaWRlbmNlRm9sbG93aW5nKGhpc3RvcnlGcmFnbWVudCk7XG5cblx0XHRpZiAocG90ZW50aWFscy5sZW5ndGggPT0gMClcblx0XHR7XG5cdFx0XHRpbmNpZGVuY2UuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUsIGtleSkge1xuXHRcdFx0XHRwb3RlbnRpYWxzLnB1c2goa2V5KTtcblx0XHRcdH0pO1xuXHRcdFx0XG5cdFx0XHRpZiAocG90ZW50aWFscy5sZW5ndGggPj0gMSkgcHJlZGljdGlvbkRhdGEubWF0Y2hMZW5ndGggPSBoaXN0b3J5RnJhZ21lbnQubGVuZ3RoO1xuXHRcdH1cblx0XHR2YXIgbWF4ID0gMDtcblx0XHR2YXIgbmV3UG90ZW50aWFscyA9IG5ldyBBcnJheSgpO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDw9IHBvdGVudGlhbHMubGVuZ3RoLTE7IGkrKylcblx0XHR7XG5cdFx0XHR2YXIgY3VycmVudFN0YXRlID0gcG90ZW50aWFsc1tpXTtcblx0XHRcdHZhciBzdGF0ZUNvdW50ID0gaW5jaWRlbmNlLmdldChjdXJyZW50U3RhdGUpO1xuXHRcdFx0aWYgKHN0YXRlQ291bnQgPiBtYXgpXG5cdFx0XHR7XG5cdFx0XHRcdG1heCA9IHN0YXRlQ291bnQ7XG5cdFx0XHRcdG5ld1BvdGVudGlhbHMgPSBuZXcgQXJyYXkoKTtcblx0XHRcdFx0bmV3UG90ZW50aWFscy5wdXNoKGN1cnJlbnRTdGF0ZSk7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIGlmIChzdGF0ZUNvdW50ID09IG1heClcblx0XHRcdHtcblx0XHRcdFx0bmV3UG90ZW50aWFscy5wdXNoKGN1cnJlbnRTdGF0ZSk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHBvdGVudGlhbHMgPSBuZXdQb3RlbnRpYWxzO1xuXG5cdFx0aWYgKHBvdGVudGlhbHMubGVuZ3RoID09IDEpXG5cdFx0e1xuXHRcdFx0cHJlZGljdGlvbkRhdGEuc3RhdGVzID0gcG90ZW50aWFscztcblx0XHRcdHJldHVybiBwcmVkaWN0aW9uRGF0YTtcblx0XHR9XG5cdFx0ZWxzZSBpZiAoaGlzdG9yeUZyYWdtZW50Lmxlbmd0aCA9PSAwKVxuXHRcdHtcblx0XHRcdGlmIChwb3RlbnRpYWxzLmxlbmd0aCA9PSAwKVxuXHRcdFx0e1xuXHRcdFx0XHQvL2JlY2F1c2UgYWxsIGhpc3RvcnkgaW5jbHVkaW5nIG51bGwgaGlzdG9yeSBoYXMgYmVlbiBjaGVja2VkIGZvciBhIG1hdGNoIGFuZCBwb3RlbnRpYWxzIGlzIHN0aWxsIGVtcHR5LCB3ZSBjYW4gaW5mZXIgdGhhdCB0aGVyZSB3YXMgbmV2ZXIgYW55IGlucHV0IHRvIGJlZ2luIHdpdGguXG5cdFx0XHRcdFxuXHRcdFx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZVxuXHRcdFx0e1xuXHRcdFx0XHQvL3NpbmNlIHRoZXJlIGhhc24ndCBiZWVuIGEgc29saXRhcnkgbWF4aW11bSBmb3VuZCBhdCBhbnkgbGV2ZWwgb2YgZGV0YWlsLCBhbmQgdGhlIGxpc3Qgb2YgcG90ZW50aWFscyBpcyBub24tZW1wdHksIHdlIGtub3cgdGhhdCB0aGVyZSBtdXN0IGJlIGEgdGllIGJldHdlZW4gdHdvIG9yIG1vcmUgc3RhdGVzLiBCeSByZXR1cm5pbmcgdGhlIHBvdGVudGlhbHMgYXJyYXksIHRoZSB1c2VyIGNhbiBjaG9vc2Ugd2hhdCB0byBkbyB3aXRoIHRoZSBhbGwgdGhlIHJlbGV2YW50IGluZm9ybWF0aW9uIGF2YWlsYWJsZS5cblx0XHRcdFx0cHJlZGljdGlvbkRhdGEuc3RhdGVzID0gcG90ZW50aWFscztcblx0XHRcdFx0cmV0dXJuIHByZWRpY3Rpb25EYXRhO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRcblx0XHRoaXN0b3J5RnJhZ21lbnQuc2hpZnQoKTtcblx0fVxuXHRcblx0Ly9yZWNhbGwgaXMgMCwgc28gaXQncyBpbXBvc3NpYmxlIHRvIHByZWRpY3QgYW55dGhpbmdcblx0cmV0dXJuIHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTdGF0ZUxlYXJuZXI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N0YXRlLWxlYXJuZXIvU3RhdGVMZWFybmVyLmpzXG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

eval("/****** ABOUT ******\n\nStateLine\n\n\tAuthor: Tom Lamb, Lambyte.com\n\tCreated: 2007.08.25\n\tReleased: \n\tDescription: An object that stores a sequence of states and can return the incidence of which states follow given state sequences.\n\t\n\t\n\n****** ***** ******/\n\nconst ArrayMap = __webpack_require__(0);\nconst IncidenceMap = __webpack_require__(7);\n\n\n/******** CONSTRUCTOR ********/\n\nfunction StateLine ()\n{\n\tthis.history = new Array();\n\tthis._ledger = new ArrayMap();\n}\n\n\n/******** PROPERTIES ********/\n\n//Structure of history: history[n] = input of the nth turn*/\nStateLine.prototype.history;\n//Structure of ledger: ledger.get(history fragment) => incidence.get(state N) = number of times that state N occurs after the given \"history fragment\"\nStateLine.prototype._ledger;\n\n\n/******** METHODS ********/\n\nStateLine.prototype.add = function (state)\n{\n\tvar historyFragment = this.history.slice(0);\n\t\n\twhile (true)\n\t{\n\t\t//increment the incidence count for the number of times that \"historyFragment\" has preceded \"state\"\n\t\tvar incidence = this._ledger.get(historyFragment);\n\t\t\n\t\tif (incidence == undefined)\n\t\t{\n\t\t\t//this history fragment has not occurred yet, so create a new incidence map\n\t\t\tvar newIncidence = new IncidenceMap();\n\t\t\tnewIncidence.set(state, 1);\n\t\t\t//NOTE: We have to clone historyFragment, because we are creating a new entry in the map. If it were left uncloned, we might modify the array being used for the purposes of this loop, and at the same time modify the array being used as an index in the map.\n\t\t\tthis._ledger.set(historyFragment.slice(0), newIncidence);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tincidence.increment(state);\n\t\t\t//incidence is an object, and therefore a reference, so we don't need to call ledger.set(historyFragment, incidence)\n\t\t}\n\t\t\n\t\tif (historyFragment.length == 0)\n\t\t{\n\t\t\tthis.history.push(state);\n\t\t\treturn;\n\t\t}\n\t\thistoryFragment.shift();\n\t}\n\t\n}\n\nStateLine.prototype.incidenceFollowing = function (sequence)\n{\n\t//NOTE: sequence should be an array\n\tvar incidence = this._ledger.get(sequence);\n\tif (incidence == undefined)\n\t{\n\t\treturn new IncidenceMap();\n\t}\n\telse\n\t{\n\t\treturn incidence;\n\t}\n}\n\nmodule.exports = StateLine;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0YXRlLWxlYXJuZXIvU3RhdGVMaW5lLmpzP2ZmMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqKioqKiBBQk9VVCAqKioqKipcblxuU3RhdGVMaW5lXG5cblx0QXV0aG9yOiBUb20gTGFtYiwgTGFtYnl0ZS5jb21cblx0Q3JlYXRlZDogMjAwNy4wOC4yNVxuXHRSZWxlYXNlZDogXG5cdERlc2NyaXB0aW9uOiBBbiBvYmplY3QgdGhhdCBzdG9yZXMgYSBzZXF1ZW5jZSBvZiBzdGF0ZXMgYW5kIGNhbiByZXR1cm4gdGhlIGluY2lkZW5jZSBvZiB3aGljaCBzdGF0ZXMgZm9sbG93IGdpdmVuIHN0YXRlIHNlcXVlbmNlcy5cblx0XG5cdFxuXG4qKioqKiogKioqKiogKioqKioqL1xuXG5jb25zdCBBcnJheU1hcCA9IHJlcXVpcmUoXCIuL0FycmF5TWFwLmpzXCIpO1xuY29uc3QgSW5jaWRlbmNlTWFwID0gcmVxdWlyZShcIi4vSW5jaWRlbmNlTWFwLmpzXCIpO1xuXG5cbi8qKioqKioqKiBDT05TVFJVQ1RPUiAqKioqKioqKi9cblxuZnVuY3Rpb24gU3RhdGVMaW5lICgpXG57XG5cdHRoaXMuaGlzdG9yeSA9IG5ldyBBcnJheSgpO1xuXHR0aGlzLl9sZWRnZXIgPSBuZXcgQXJyYXlNYXAoKTtcbn1cblxuXG4vKioqKioqKiogUFJPUEVSVElFUyAqKioqKioqKi9cblxuLy9TdHJ1Y3R1cmUgb2YgaGlzdG9yeTogaGlzdG9yeVtuXSA9IGlucHV0IG9mIHRoZSBudGggdHVybiovXG5TdGF0ZUxpbmUucHJvdG90eXBlLmhpc3Rvcnk7XG4vL1N0cnVjdHVyZSBvZiBsZWRnZXI6IGxlZGdlci5nZXQoaGlzdG9yeSBmcmFnbWVudCkgPT4gaW5jaWRlbmNlLmdldChzdGF0ZSBOKSA9IG51bWJlciBvZiB0aW1lcyB0aGF0IHN0YXRlIE4gb2NjdXJzIGFmdGVyIHRoZSBnaXZlbiBcImhpc3RvcnkgZnJhZ21lbnRcIlxuU3RhdGVMaW5lLnByb3RvdHlwZS5fbGVkZ2VyO1xuXG5cbi8qKioqKioqKiBNRVRIT0RTICoqKioqKioqL1xuXG5TdGF0ZUxpbmUucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChzdGF0ZSlcbntcblx0dmFyIGhpc3RvcnlGcmFnbWVudCA9IHRoaXMuaGlzdG9yeS5zbGljZSgwKTtcblx0XG5cdHdoaWxlICh0cnVlKVxuXHR7XG5cdFx0Ly9pbmNyZW1lbnQgdGhlIGluY2lkZW5jZSBjb3VudCBmb3IgdGhlIG51bWJlciBvZiB0aW1lcyB0aGF0IFwiaGlzdG9yeUZyYWdtZW50XCIgaGFzIHByZWNlZGVkIFwic3RhdGVcIlxuXHRcdHZhciBpbmNpZGVuY2UgPSB0aGlzLl9sZWRnZXIuZ2V0KGhpc3RvcnlGcmFnbWVudCk7XG5cdFx0XG5cdFx0aWYgKGluY2lkZW5jZSA9PSB1bmRlZmluZWQpXG5cdFx0e1xuXHRcdFx0Ly90aGlzIGhpc3RvcnkgZnJhZ21lbnQgaGFzIG5vdCBvY2N1cnJlZCB5ZXQsIHNvIGNyZWF0ZSBhIG5ldyBpbmNpZGVuY2UgbWFwXG5cdFx0XHR2YXIgbmV3SW5jaWRlbmNlID0gbmV3IEluY2lkZW5jZU1hcCgpO1xuXHRcdFx0bmV3SW5jaWRlbmNlLnNldChzdGF0ZSwgMSk7XG5cdFx0XHQvL05PVEU6IFdlIGhhdmUgdG8gY2xvbmUgaGlzdG9yeUZyYWdtZW50LCBiZWNhdXNlIHdlIGFyZSBjcmVhdGluZyBhIG5ldyBlbnRyeSBpbiB0aGUgbWFwLiBJZiBpdCB3ZXJlIGxlZnQgdW5jbG9uZWQsIHdlIG1pZ2h0IG1vZGlmeSB0aGUgYXJyYXkgYmVpbmcgdXNlZCBmb3IgdGhlIHB1cnBvc2VzIG9mIHRoaXMgbG9vcCwgYW5kIGF0IHRoZSBzYW1lIHRpbWUgbW9kaWZ5IHRoZSBhcnJheSBiZWluZyB1c2VkIGFzIGFuIGluZGV4IGluIHRoZSBtYXAuXG5cdFx0XHR0aGlzLl9sZWRnZXIuc2V0KGhpc3RvcnlGcmFnbWVudC5zbGljZSgwKSwgbmV3SW5jaWRlbmNlKTtcblx0XHR9XG5cdFx0ZWxzZVxuXHRcdHtcblx0XHRcdGluY2lkZW5jZS5pbmNyZW1lbnQoc3RhdGUpO1xuXHRcdFx0Ly9pbmNpZGVuY2UgaXMgYW4gb2JqZWN0LCBhbmQgdGhlcmVmb3JlIGEgcmVmZXJlbmNlLCBzbyB3ZSBkb24ndCBuZWVkIHRvIGNhbGwgbGVkZ2VyLnNldChoaXN0b3J5RnJhZ21lbnQsIGluY2lkZW5jZSlcblx0XHR9XG5cdFx0XG5cdFx0aWYgKGhpc3RvcnlGcmFnbWVudC5sZW5ndGggPT0gMClcblx0XHR7XG5cdFx0XHR0aGlzLmhpc3RvcnkucHVzaChzdGF0ZSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdGhpc3RvcnlGcmFnbWVudC5zaGlmdCgpO1xuXHR9XG5cdFxufVxuXG5TdGF0ZUxpbmUucHJvdG90eXBlLmluY2lkZW5jZUZvbGxvd2luZyA9IGZ1bmN0aW9uIChzZXF1ZW5jZSlcbntcblx0Ly9OT1RFOiBzZXF1ZW5jZSBzaG91bGQgYmUgYW4gYXJyYXlcblx0dmFyIGluY2lkZW5jZSA9IHRoaXMuX2xlZGdlci5nZXQoc2VxdWVuY2UpO1xuXHRpZiAoaW5jaWRlbmNlID09IHVuZGVmaW5lZClcblx0e1xuXHRcdHJldHVybiBuZXcgSW5jaWRlbmNlTWFwKCk7XG5cdH1cblx0ZWxzZVxuXHR7XG5cdFx0cmV0dXJuIGluY2lkZW5jZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFN0YXRlTGluZTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vc3RhdGUtbGVhcm5lci9TdGF0ZUxpbmUuanNcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(3);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(12)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/less-loader/dist/index.js!./index.less\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/less-loader/dist/index.js!./index.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvaW5kZXgubGVzcz8wYjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9pbmRleC5qcyEuL2luZGV4Lmxlc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge31cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2luZGV4LmpzIS4vaW5kZXgubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvaW5kZXguanMhLi9pbmRleC5sZXNzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NsaWVudC9pbmRleC5sZXNzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(selector) {\n\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t}\n\n\t\treturn memo[selector]\n\t};\n})(function (target) {\n\treturn document.querySelector(target)\n});\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(13);\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton) options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 13 */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3N0eWxlLWxvYWRlci9saWIvdXJscy5qcz85YzMxIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3N0eWxlLWxvYWRlci9saWIvdXJscy5qc1xuLy8gbW9kdWxlIGlkID0gMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);